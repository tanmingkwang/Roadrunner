leaflet(density.ppp(accidents_ppp, 1000)) %>% addTiles(group="OSM")
plot(density.lpp(accidents_lpp, 1000))
plot(density.ppp(accidents_ppp, 1000))
library(leaflet)
leaflet(plot(density.ppp(accidents_ppp, 1000))) %>%
addTiles(group="OSM")
library(leaflet)
leaflet(plot(density.ppp(accidents_lpp, 1000))) %>%
addTiles(group="OSM")
library(leaflet)
leaflet(plot(density.lpp(accidents_lpp, 1000))) %>%
addTiles(group="OSM")
library(leaflet)
temp <- density.lpp(accidents_lpp, 1000)
leaflet(temp) %>%
addTiles(group="OSM")
View(temp)
plot(nndist.lpp(accidents_lpp, k=10, method="C"))
plot(nnfun.lpp(accidents_lpp, k=10, method="C"))
plot(nndist.lpp(accidents_lpp, k=10, method="C"))
plot(nnfun.lpp(accidents_lpp, k=100, method="C"))
plot(nndist.lpp(accidents_lpp, k=10, method="C"))
plot(nnfun.lpp(accidents_lpp, k=10, method="C"))
gest(accidents_ppp)
librart(spatstat)
library(spatstat)
plot(nndist.lpp(accidents_lpp, k=10, method="C"))
plot(nnfun.lpp(accidents_lpp, k=10, method="C"))
gest(accidents_ppp)
library(spatstat)
plot(nndist.lpp(accidents_lpp, k=10, method="C"))
plot(nnfun.lpp(accidents_lpp, k=10, method="C"))
Gest(accidents_ppp)
library(spatstat)
plot(nndist.lpp(accidents_lpp, k=10, method="C"))
plot(nnfun.lpp(accidents_lpp, k=10, method="C"))
Gest(accidents_ppp, r = 10)
library(spatstat)
plot(nndist.lpp(accidents_lpp, k=10, method="C"))
plot(nnfun.lpp(accidents_lpp, k=10, method="C"))
Gest(accidents_ppp, r=10)
library(spatstat)
plot(nndist.lpp(accidents_lpp, k=10, method="C"))
plot(nnfun.lpp(accidents_lpp, k=10, method="C"))
Gest(accidents_ppp, r=5)
library(spatstat)
plot(nndist.lpp(accidents_lpp, k=10, method="C"))
plot(nnfun.lpp(accidents_lpp, k=10, method="C"))
plot(Gest(accidents_ppp))
library(tidyverse)
library(spatstat)
library(readr)
trafficReport <- read_csv("data/LTATrafficDataClean2.csv")
trafficReport_shp <- st_as_sf(trafficReport, coords = c("Longitude", "Latitude"), crs = "+proj=longlat +datum=WGS84 +no_defs")
library(readr)
library(sf)
trafficReport <- read_csv("data/LTATrafficDataClean2.csv")
trafficReport_shp <- st_as_sf(trafficReport, coords = c("Longitude", "Latitude"), crs = "+proj=longlat +datum=WGS84 +no_defs")
traffic_Report_svy21 <- st_transform(trafficReport_shp, crs = 3414)
st_write(traffic_Report_svy21, "data/temp.csv", layer_options = "GEOMETRY=AS_XY") # writes X and Y as columns
library(readr)
library(sf)
trafficReport <- read_csv("data/LTATrafficDataClean2.csv")
trafficReport_shp <- st_as_sf(trafficReport, coords = c("Longitude", "Latitude"), crs = "+proj=longlat +datum=WGS84 +no_defs")
traffic_Report_svy21 <- st_transform(trafficReport_shp, crs = 3414)
st_write(traffic_Report_svy21, "data/temp.csv", layer_options = "GEOMETRY=AS_XY") # writes X and Y as columns
library(tidyverse)
library(spatstat)
temp <- read_csv("data/temp.csv")
accidents <- temp %>% filter(Type == "Accident")
roadworks <- temp %>% filter(Type == "Roadwork")
heavytraffic <- temp %>% filter(Type == "Heavy Traffic")
accidents_ppp <- ppp(accidents$X, accidents$Y, c(min(accidents$X), max(accidents$X)), c(min(accidents$Y), max(accidents$Y)))
roadworks_ppp <- ppp(roadworks$X, roadworks$Y, c(min(roadworks$X), max(roadworks$X)), c(min(roadworks$Y), max(roadworks$Y)))
plot(accidents_ppp)
plot(roadworks_ppp)
library(tidyverse)
library(spatstat)
temp <- read_csv("data/temp.csv")
accidents <- temp %>% filter(Type == "Accident")
roadworks <- temp %>% filter(Type == "Roadwork")
heavytraffic <- temp %>% filter(Type == "Heavy Traffic")
accidents_ppp <- ppp(accidents$X, accidents$Y, c(min(accidents$X), max(accidents$X)), c(min(accidents$Y), max(accidents$Y)))
roadworks_ppp <- ppp(roadworks$X, roadworks$Y, c(min(roadworks$X), max(roadworks$X)), c(min(roadworks$Y), max(roadworks$Y)))
heavytraffic_ppp <- ppp(heavytraffic$X, heavytraffic$Y, c(min(heavytraffic$X), max(heavytraffic$X)), c(min(heavytraffic$Y), max(heavytraffic$Y)))
plot(accidents_ppp)
plot(roadworks_ppp)
plot(heavytraffic_ppp)
accidents_lpp <- lpp(accidents_ppp, roadNetwork_linnet)
heavytraffic_lpp <- lpp(heavytraffic_ppp, roadNetwork_linnet)
plot(density.lpp(accidents_lpp, 1000))
plot(density.ppp(accidents_ppp, 1000))
plot(density.ppp(heavytraffic_lpp, 1000))
plot(density.lpp(accidents_lpp, 1000))
plot(density.ppp(accidents_ppp, 1000))
plot(density.lpp(heavytraffic_lpp, 1000))
plot(linearK(accidents_lpp, correction="none", ratio=FALSE))
plot(linearK(heavytraffic_lpp, correction="none", ratio=FALSE))
plot(density.lpp(accidents_lpp, 1000))
plot(density.ppp(accidents_ppp, 1000))
plot(density.lpp(heavytraffic_lpp, 1000))
plot(density.ppp(heavytraffic_ppp, 1000))
library(spatstat)
plot(nndist.lpp(accidents_lpp, k=10, method="C"))
plot(nnfun.lpp(accidents_lpp, k=10, method="C"))
plot(Gest(accidents_ppp))
plot(nndist.lpp(heavytraffic_lpp, k=10, method="C"))
plot(nnfun.lpp(heavytraffic_lpp, k=10, method="C"))
plot(Gest(heavytraffic_ppp))
library(spatstat)
plot(nndist.lpp(accidents_lpp, k=10, method="C"))
plot(nnfun.lpp(accidents_lpp, k=100, method="C"))
plot(Gest(accidents_ppp))
plot(nndist.lpp(heavytraffic_lpp, k=10, method="C"))
plot(nnfun.lpp(heavytraffic_lpp, k=100, method="C"))
plot(Gest(heavytraffic_ppp))
library(leaflet)
m <- leaflet() %>%
addPolylines(traffic_Report_svy21, lng = NULL, lat = NULL, layerId = "test1")
View(traffic_Report_svy21)
View(roadNetwork)
library(leaflet)
m <- leaflet() %>%
addTiles %>%
addMarkers(data = trafficReport, lng = trafficReport$Longitude, lat = trafficReport$Latitude, popup = Property.Name)
library(leaflet)
m <- leaflet() %>%
addTiles %>%
addMarkers(data = trafficReport, lng = trafficReport$Longitude, lat = trafficReport$Latitude, popup = trafficReport$Descriptions)
m
View(accidents_ppp)
View(accidents_ppp)
library(spatstat)
hist(nndist.lpp(accidents_lpp, k=10, method="C"))
plot(nnfun.lpp(accidents_lpp, k=10, method="C"))
plot(Gest(accidents_ppp))
hist(nndist.lpp(heavytraffic_lpp, k=10, method="C"))
plot(nnfun.lpp(heavytraffic_lpp, k=10, method="C"))
plot(Gest(heavytraffic_ppp))
View(accidents_lpp)
View(accidents)
library(leaflet)
m <- leaflet() %>%
addTiles %>%
addCircles(data = accidents, lng = accidents$X, lat = accidents$Y, popup = accidents$Descriptions, radius = .5, opacity = .2, col = "blue")
m
library(leaflet)
m <- leaflet() %>%
addCircles(data = accidents, lng = accidents$X, lat = accidents$Y, popup = accidents$Descriptions, radius = .5, opacity = .2, col = "blue")
m
library(leaflet)
m <- leaflet() %>%
addTiles %>%
addCirclesMarkers(accidents, lng = accidents$X, lat = accidents$Y, popup = accidents$Descriptions, radius = .5, opacity = .2, col =)
library(leaflet)
m <- leaflet() %>%
addTiles %>%
addCircleMarkers(accidents, lng = accidents$X, lat = accidents$Y, popup = accidents$Descriptions, radius = .5, opacity = .2, col =)
m
View(accidents)
View(trafficReport)
View(trafficReport)
library(leaflet)
m <- leaflet() %>%
addTiles %>%
addCircleMarkers(trafficReport, lng = trafficReport$Longitude, lat = trafficReport$Latitude, popup = trafficReport$Descriptions, radius = .5, opacity = .2, col =)
m
library(tidyverse)
library(spatstat)
temp <- read_csv("data/temp.csv")
accidents_kdeplots <- trafficReport &>& filter(Type == "Accident")
library(leaflet)
m <- leaflet() %>%
addCircleMarkers(trafficReport, lng = trafficReport$Longitude, lat = trafficReport$Latitude, popup = trafficReport$Descriptions, radius = .5, opacity = .2, col = "Blue")
m
library(leaflet)
m <- leaflet() %>%
addTiles %>%
addCircleMarkers(trafficReport, lng = trafficReport$Longitude, lat = trafficReport$Latitude, popup = trafficReport$Descriptions, radius = .5, opacity = .2, col = "Blue")
m
View(roadNetwork)
View(roadNetwork)
library(leaflet)
m <- leaflet() %>%
addProviderTiles(providers$CartoDB.Positron) %>%
addCircleMarkers(trafficReport, lng = trafficReport$Longitude, lat = trafficReport$Latitude, popup = trafficReport$Descriptions, radius = .5, opacity = .2, col = "Blue")
m
library(spatstat)
readShapeSpatial(roadNetwork)
library(spatstat)
temp <- readShapeSpatial(roadNetwork)
library(maptools)
readShapeSpatial(roadNetwork)
class(roadNetwork)
library(leaflet)
m <- leaflet() %>%
addProviderTiles(providers$CartoDB.Positron) %>%
addPolylines(data = roadNetwork, color = "red")
#addCircleMarkers(trafficReport, lng = trafficReport$Longitude, lat = trafficReport$Latitude, popup = trafficReport$Descriptions, radius = .5, opacity = .2, col = "Blue")
m
class(roadNetwork_psp)
class(roadNetwork_linnet)
class(roadNetwork)
library(leaflet)
temp <- readShapeSpatial("data/RoadNetwork/roads_expressway", proj4string=CRS("+proj=longlat +datum=WGS84 +no_defs"))
m <- leaflet() %>%
addProviderTiles(providers$CartoDB.Positron) %>%
addPolylines(data = temp, color = "red")
#addCircleMarkers(trafficReport, lng = trafficReport$Longitude, lat = trafficReport$Latitude, popup = trafficReport$Descriptions, radius = .5, opacity = .2, col = "Blue")
m
View(temp)
temp <- density.lpp(accidents_lpp, 1000)
class(temp)
library(leaflet)
#temp <- readShapeSpatial("data/RoadNetwork/roads_expressway", proj4string=CRS("+proj=longlat +datum=WGS84 +no_defs"))
m <- leaflet() %>%
addProviderTiles(providers$CartoDB.Positron) %>%
addPolylines(data = temp, color = "red")
library(leaflet)
#temp <- readShapeSpatial("data/RoadNetwork/roads_expressway", proj4string=CRS("+proj=longlat +datum=WGS84 +no_defs"))
m <- leaflet(accidents_lpp) %>%
addProviderTiles(providers$CartoDB.Positron) %>%
addWebGLHeatmap(lng=~long, lat=~lat, size = 60000)
library(leaflet.extras)
#temp <- readShapeSpatial("data/RoadNetwork/roads_expressway", proj4string=CRS("+proj=longlat +datum=WGS84 +no_defs"))
m <- leaflet(accidents_lpp) %>%
addProviderTiles(providers$CartoDB.Positron) %>%
addWebGLHeatmap(lng=~long, lat=~lat, size = 60000)
library(leaflet.extras)
#temp <- readShapeSpatial("data/RoadNetwork/roads_expressway", proj4string=CRS("+proj=longlat +datum=WGS84 +no_defs"))
m <- leaflet() %>%
addProviderTiles(providers$CartoDB.Positron) %>%
addWebGLCSVHeatmap(roadNetwork, accidents, size = 60000)
#addCircleMarkers(trafficReport, lng = trafficReport$Longitude, lat = trafficReport$Latitude, popup = trafficReport$Descriptions, radius = .5, opacity = .2, col = "Blue")
m
library(leaflet.extras)
#temp <- readShapeSpatial("data/RoadNetwork/roads_expressway", proj4string=CRS("+proj=longlat +datum=WGS84 +no_defs"))
m <- leaflet() %>%
addProviderTiles(providers$CartoDB.Positron) %>%
addWebGLCSVHeatmap(roadNetwork, trafficReport, size = 60000)
#addCircleMarkers(trafficReport, lng = trafficReport$Longitude, lat = trafficReport$Latitude, popup = trafficReport$Descriptions, radius = .5, opacity = .2, col = "Blue")
m
library(leaflet.extras)
#temp <- readShapeSpatial("data/RoadNetwork/roads_expressway", proj4string=CRS("+proj=longlat +datum=WGS84 +no_defs"))
m <- leaflet() %>%
addProviderTiles(providers$CartoDB.Positron) %>%
addCSVHeatmap(roadNetwork, trafficReport, size = 60000)
library(leaflet.extras)
#temp <- readShapeSpatial("data/RoadNetwork/roads_expressway", proj4string=CRS("+proj=longlat +datum=WGS84 +no_defs"))
m <- leaflet() %>%
addProviderTiles(providers$CartoDB.Positron) %>%
addCSVHeatmap(roadNetwork, trafficReport)
#addCircleMarkers(trafficReport, lng = trafficReport$Longitude, lat = trafficReport$Latitude, popup = trafficReport$Descriptions, radius = .5, opacity = .2, col = "Blue")
m
library(leaflet.extras)
temp <- readShapeSpatial("data/RoadNetwork/roads_expressway", proj4string=CRS("+proj=longlat +datum=WGS84 +no_defs"))
library(leaflet.extras)
library(maptools)
temp <- readShapeSpatial("data/RoadNetwork/roads_expressway", proj4string=CRS("+proj=longlat +datum=WGS84 +no_defs"))
m <- leaflet() %>%
addProviderTiles(providers$CartoDB.Positron) %>%
addCSVHeatmap(temp, trafficReport)
#addCircleMarkers(trafficReport, lng = trafficReport$Longitude, lat = trafficReport$Latitude, popup = trafficReport$Descriptions, radius = .5, opacity = .2, col = "Blue")
m
View(traffic_Report_svy21)
View(trafficReport_shp)
library(tidyverse)
library(spatstat)
temp <- read_csv("data/temp.csv")
accidents <- trafficReport %>% filter(Type == "Accident")
roadworks <- trafficReport %>% filter(Type == "Roadwork")
heavytraffic <- trafficReport %>% filter(Type == "Heavy Traffic")
accidents_ppp <- ppp(accidents$X, accidents$Y, c(min(accidents$X), max(accidents$X)), c(min(accidents$Y), max(accidents$Y)))
library(tidyverse)
library(spatstat)
temp <- read_csv("data/temp.csv")
accidents <- trafficReport %>% filter(Type == "Accident")
roadworks <- trafficReport %>% filter(Type == "Roadwork")
heavytraffic <- trafficReport %>% filter(Type == "Heavy Traffic")
accidents_ppp <- ppp(accidents$Longitude, accidents$Latitude, c(min(accidents$Longitude), max(accidents$Longitude)), c(min(accidents$Latitude), max(accidents$Latitude)))
roadworks_ppp <- ppp(roadworks$X, roadworks$Y, c(min(roadworks$X), max(roadworks$X)), c(min(roadworks$Y), max(roadworks$Y)))
library(tidyverse)
library(spatstat)
temp <- read_csv("data/temp.csv")
accidents <- trafficReport %>% filter(Type == "Accident")
roadworks <- trafficReport %>% filter(Type == "Roadwork")
heavytraffic <- trafficReport %>% filter(Type == "Heavy Traffic")
accidents_ppp <- ppp(accidents$Longitude, accidents$Latitude, c(min(accidents$Longitude), max(accidents$Longitude)), c(min(accidents$Latitude), max(accidents$Latitude)))
roadworks_ppp <- ppp(roadworks$Longitude, roadworks$Latitude, c(min(roadworks$Longitude), max(roadworks$Longitude)), c(min(roadworks$Latitude), max(roadworks$Latitude)))
heavytraffic_ppp <- ppp(heavytraffic$Longitude, heavytraffic$Latitude, c(min(heavytraffic$Longitude), max(heavytraffic$Longitude)), c(min(heavytraffic$Latitude), max(heavytraffic$Latitude)))
plot(accidents_ppp)
plot(roadworks_ppp)
plot(heavytraffic_ppp)
accidents_lpp <- lpp(accidents_ppp, roadNetwork_linnet)
heavytraffic_lpp <- lpp(heavytraffic_ppp, roadNetwork_linnet)
plot(density.lpp(accidents_lpp, 1000))
plot(density.ppp(accidents_ppp, 1000))
plot(density.lpp(heavytraffic_lpp, 3000))
plot(density.ppp(heavytraffic_ppp, 1000))
library(readr)
library(sf)
trafficReport <- read_csv("data/LTATrafficDataClean2.csv")
trafficReport_shp <- st_as_sf(trafficReport, coords = c("Longitude", "Latitude"), crs = "+proj=longlat +datum=WGS84 +no_defs")
traffic_Report_svy21 <- st_transform(trafficReport_shp, crs = 3414)
st_write(traffic_Report_svy21, "data/temp.csv", layer_options = "GEOMETRY=AS_XY") # writes X and Y as columns
library(readr)
library(sf)
trafficReport <- read_csv("data/LTATrafficDataClean2.csv")
trafficReport_shp <- st_as_sf(trafficReport, coords = c("Longitude", "Latitude"), crs = "+proj=longlat +datum=WGS84 +no_defs")
traffic_Report_svy21 <- st_transform(trafficReport_shp, crs = 3414)
st_write(traffic_Report_svy21, "data/temp.csv", layer_options = "GEOMETRY=AS_XY") # writes X and Y as columns
library(tidyverse)
library(spatstat)
temp <- read_csv("data/temp.csv")
accidents <- trafficReport %>% filter(Type == "Accident")
roadworks <- trafficReport %>% filter(Type == "Roadwork")
heavytraffic <- trafficReport %>% filter(Type == "Heavy Traffic")
accidents_ppp <- ppp(accidents$X, accidents$Y, c(min(accidents$X), max(accidents$X)), c(min(accidents$Y), max(accidents$Y)))
library(tidyverse)
library(spatstat)
temp <- read_csv("data/temp.csv")
accidents <- temp %>% filter(Type == "Accident")
roadworks <- temp %>% filter(Type == "Roadwork")
heavytraffic <- temp %>% filter(Type == "Heavy Traffic")
accidents_ppp <- ppp(accidents$X, accidents$Y, c(min(accidents$X), max(accidents$X)), c(min(accidents$Y), max(accidents$Y)))
roadworks_ppp <- ppp(roadworks$X, roadworks$Y, c(min(roadworks$X), max(roadworks$X)), c(min(roadworks$Y), max(roadworks$Y)))
heavytraffic_ppp <- ppp(heavytraffic$X, heavytraffic$Y, c(min(heavytraffic$X), max(heavytraffic$X)), c(min(heavytraffic$Y), max(heavytraffic$Y)))
plot(accidents_ppp)
plot(roadworks_ppp)
plot(heavytraffic_ppp)
accidents_lpp <- lpp(accidents_ppp, roadNetwork_linnet)
heavytraffic_lpp <- lpp(heavytraffic_ppp, roadNetwork_linnet)
plot(density.lpp(accidents_lpp, 1000))
plot(density.ppp(accidents_ppp, 1000))
plot(density.lpp(heavytraffic_lpp, 3000))
plot(density.ppp(heavytraffic_ppp, 1000))
library(readr)
library(sf)
trafficReport <- read_csv("data/LTATrafficDataClean2.csv")
trafficReport_shp <- st_as_sf(trafficReport, coords = c("Longitude", "Latitude"), crs = "+proj=longlat +datum=WGS84 +no_defs")
traffic_Report_svy21 <- st_transform(trafficReport_shp, crs = 3414)
st_write(traffic_Report_svy21, "data/temp.csv", layer_options = "GEOMETRY=AS_XY") # writes X and Y as columns
library(rgdal)
childcare <- readOGR(layer = "CHILDCARE_WL")
library(rgdal)
childcare <- readOGR("CHILDCARE_WL.shp")
library(rgdal)
childcare <- readOGR("CHILDCARE_WL.shp")
woodlands <- readOGR("WOODLANDS.shp")
library(rgdal)
childcare <- readOGR("CHILDCARE_WL.shp")
woodlands <- readOGR("WOODLANDS.shp")
View(childcare)
View(woodlands)
View(childcare)
childcare_sp <- as(childcare, "SpatialPoints")
woodlands_sp <- as(woodlands, "SpatialPoints")
childcare_sp <- as(childcare, "SpatialPoints")
woodlands_sp <- as(woodlands, "SpatialPolygons")
View(woodlands_sp)
childcare_ppp <- as(childcare_sp, "ppp")
W <- as(woodlands_sp, "owin")
childcare_ppp <- as(childcare_sp, "ppp")
W <- as(woodlands_sp, "owin")
plot(childcare_ppp)
childcare_ppp <- as(childcare_sp, "ppp")
W <- as(woodlands_sp, "owin")
plot(childcare_ppp)
plot(W)
qc <- quadratcount(childcare_ppp, 5, 4)
quadrat.test(childcare_ppp, 5, 4)
qc <- quadratcount(childcare_ppp, 5, 4)
quadrat.test(childcare_ppp, 5, 4)
plot(qc)
qc <- quadratcount(childcare_ppp, 5, 4)
quadrat.test(childcare_ppp, 5, 4)
hist(qc)
qc <- quadratcount(childcare_ppp, 5, 4)
quadrat.test(childcare_ppp, 5, 4)
nnd <- nndist(childcare_ppp)
hist(nnd)
G <- Gest(childcare_ppp)
plot(G, xlim=c(0,500))
library(spatstat)
hist(nndist.lpp(accidents_lpp, k=10, method="C"))
library(readr)
library(sf)
trafficReport <- read_csv("data/LTATrafficDataClean2.csv")
trafficReport_shp <- st_as_sf(trafficReport, coords = c("Longitude", "Latitude"), crs = "+proj=longlat +datum=WGS84 +no_defs")
traffic_Report_svy21 <- st_transform(trafficReport_shp, crs = 3414)
st_write(traffic_Report_svy21, "data/temp.csv", layer_options = "GEOMETRY=AS_XY") # writes X and Y as columns
library(readr)
library(sf)
trafficReport <- read_csv("data/LTATrafficDataClean2.csv")
trafficReport_shp <- st_as_sf(trafficReport, coords = c("Longitude", "Latitude"), crs = "+proj=longlat +datum=WGS84 +no_defs")
traffic_Report_svy21 <- st_transform(trafficReport_shp, crs = 3414)
st_write(traffic_Report_svy21, "data/temp.csv", layer_options = "GEOMETRY=AS_XY") # writes X and Y as columns
library(tidyverse)
library(spatstat)
temp <- read_csv("data/temp.csv")
accidents <- temp %>% filter(Type == "Accident")
roadworks <- temp %>% filter(Type == "Roadwork")
heavytraffic <- temp %>% filter(Type == "Heavy Traffic")
accidents_ppp <- ppp(accidents$X, accidents$Y, c(min(accidents$X), max(accidents$X)), c(min(accidents$Y), max(accidents$Y)))
roadworks_ppp <- ppp(roadworks$X, roadworks$Y, c(min(roadworks$X), max(roadworks$X)), c(min(roadworks$Y), max(roadworks$Y)))
heavytraffic_ppp <- ppp(heavytraffic$X, heavytraffic$Y, c(min(heavytraffic$X), max(heavytraffic$X)), c(min(heavytraffic$Y), max(heavytraffic$Y)))
plot(accidents_ppp)
plot(roadworks_ppp)
plot(heavytraffic_ppp)
accidents_lpp <- lpp(accidents_ppp, roadNetwork_linnet)
library(maptools)
roadNetwork <- readShapeSpatial("data/RoadNetwork/roads_expressway")
roadNetwork_psp <- as.psp(roadNetwork, window=NULL, marks=NULL, check=spatstat.options("checksegments"), fatal=TRUE)
roadNetwork_linnet <- as.linnet.psp(roadNetwork_psp, sparse=TRUE)
plot(roadNetwork_linnet)
accidents_lpp <- lpp(accidents_ppp, roadNetwork_linnet)
heavytraffic_lpp <- lpp(heavytraffic_ppp, roadNetwork_linnet)
library(spatstat)
hist(nndist.lpp(accidents_lpp, k=10, method="C"))
plot(nnfun.lpp(accidents_lpp, k=10, method="C"))
plot(Gest(accidents_ppp))
hist(nndist.lpp(heavytraffic_lpp, k=10, method="C"))
plot(nnfun.lpp(heavytraffic_lpp, k=10, method="C"))
plot(Gest(heavytraffic_ppp), xlim=c(0,500))
library(spatstat)
hist(nndist.lpp(accidents_lpp, k=10, method="C"))
plot(nnfun.lpp(accidents_lpp, k=10, method="C"))
plot(Gest(accidents_ppp), xlim=c(0,500))
hist(nndist.lpp(heavytraffic_lpp, k=10, method="C"))
plot(nnfun.lpp(heavytraffic_lpp, k=10, method="C"))
plot(Gest(heavytraffic_ppp), xlim=c(0,500))
library(spatstat)
hist(nndist.lpp(accidents_lpp, k=10, method="C"))
plot(nnfun.lpp(accidents_lpp, k=10, method="C"))
plot(Gest(accidents_ppp), xlim=c(0,1000))
hist(nndist.lpp(heavytraffic_lpp, k=10, method="C"))
plot(nnfun.lpp(heavytraffic_lpp, k=10, method="C"))
plot(Gest(heavytraffic_ppp), xlim=c(0,1000))
G.csr <- envelope(childcare_ppp, Gest, nsim = 99, rank = 1, glocal=TRUE)
plot(G.csr, xlim=c(0,500))
G.csr <- envelope(childcare_ppp, Gest, nsim = 99, rank = 1, glocal=TRUE)
plot(G.csr, xlim=c(0,1000))
library(spatstat)
hist(nndist.lpp(accidents_lpp, k=10, method="C"))
plot(nnfun.lpp(accidents_lpp, k=10, method="C"))
plot(Gest(accidents_ppp), xlim=c(0,5000))
hist(nndist.lpp(heavytraffic_lpp, k=10, method="C"))
plot(nnfun.lpp(heavytraffic_lpp, k=10, method="C"))
plot(Gest(heavytraffic_ppp), xlim=c(0,5000))
library(spatstat)
hist(nndist.lpp(accidents_lpp, k=10, method="C"))
plot(nnfun.lpp(accidents_lpp, k=10, method="C"))
plot(Gest(accidents_ppp), xlim=c(0,2000))
hist(nndist.lpp(heavytraffic_lpp, k=10, method="C"))
plot(nnfun.lpp(heavytraffic_lpp, k=10, method="C"))
plot(Gest(heavytraffic_ppp), xlim=c(0,2000))
G.csr <- envelope(childcare_ppp, Gest, nsim = 99, rank = 1, glocal=TRUE)
plot(G.csr, xlim=c(0,200))
G <- Gest(childcare_ppp)
plot(G, xlim=c(0,200))
G <- Gest(childcare_ppp)
plot(G, xlim=c(0,300))
G.csr <- envelope(childcare_ppp, Gest, nsim = 99, rank = 1, glocal=TRUE)
plot(G.csr, xlim=c(0,300))
K <- Keast(childcare_ppp)
K <- Kest(childcare_ppp)
plot(k, xlim=c(0,500))
K <- Kest(childcare_ppp)
plot(K, xlim=c(0,500))
K.csr <- envelope(childcare_ppp, Kest, nsim = 99, rank = 1, glocal=TRUE)
plot(K.csr, xlim=c(0,500))
K.csr <- envelope(childcare_ppp, Kest, nsim = 99)
plot(K.csr, xlim=c(0,500))
K.csr <- envelope(childcare_ppp, Kest, nsim = 99, rank = 1, glocal=TRUE)
plot(K.csr, xlim=c(0,500))
K.csr <- envelope(childcare_ppp, Kest, nsim = 999, rank = 1, glocal=TRUE)
plot(K.csr, xlim=c(0,500))
K.csr <- envelope(childcare_ppp, Kest, nsim = 999, rank = 1, glocal=TRUE)
plot(K.csr, xlim=c(0,500))
K.csr <- envelope(childcare_ppp, Kest, nsim = 999, rank = 1, glocal=TRUE)
plot(K.csr, xlim=c(0,500))
kde_sp_100 <- density(childcare_ppp, 100)
plot(kde_sp_100)
# 100 represent 100m
kde_sp_100 <- density(childcare_ppp, 1300)
plot(kde_sp_100)
# 100 represent 100m
kde_sp_100 <- density(childcare_ppp, 300)
plot(kde_sp_100)
# 100 represent 100m
kde_sp_100 <- density(childcare_ppp, 10)
plot(kde_sp_100)
# 100 represent 100m
kde_sp_100 <- density(childcare_ppp, 50)
plot(kde_sp_100)
# 100 represent 100m
kde_sp_100 <- density(childcare_ppp, 150)
plot(kde_sp_100)
# 100 represent 100m
kde_sp_100 <- density(childcare_ppp, 200)
plot(kde_sp_100)
# 100 represent 100m
kde_sp_100 <- density(childcare_ppp, 500)
plot(kde_sp_100)
# 100 represent 100m
kde_sp_100 <- density(childcare_ppp, 10000)
plot(kde_sp_100)
# 100 represent 100m
kde_sp_100 <- density(childcare_ppp, 100)
plot(kde_sp_100)
View(trafficReport)
View(temp)
