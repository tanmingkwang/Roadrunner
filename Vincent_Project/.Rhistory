<<<<<<< HEAD
expressway<- readOGR(dsn = 'RoadNetwork', layer = 'roads_expressway_simplified')
# Create accidents ppp
accidents <- readOGR('final_data', 'accidents')
accidents_sp <- as(accidents, 'SpatialPoints')
accidents_ppp <- as.ppp(accidents_sp)
# Create expressway linnet
expressway_psp <- as.psp(expressway)
expressway_linnet <- as.linnet.psp(expressway_psp, sparse = TRUE)
# Create lpp
accidents_lpp <- lpp(accidents_ppp, expressway_linnet)
#system.time(envelope.lpp(accidents_lpp,linearK, nsim = 99, r = seq(0,1,by=0.20)))
envelope.lpp(accidents_lpp,linearK, nsim = 3, r=seq(0,1,0.2))
packages = c('tmap', 'sf', 'tidyverse', 'RColorBrewer', 'classInt', 'spatstat', 'rgdal', 'maptools', 'rgeos')
=======
class(hms('2:22:22'))
packages = c('tmap', 'sf', 'tidyverse', 'RColorBrewer', 'classInt', 'spatstat', 'rgdal', 'maptools')
>>>>>>> 8b5dadc926b8d0c15b1d6270a7ff4de4ad0385eb
for (p in packages){
if(!require(p, character.only = T)){
install.packages(p)
}
library(p, character.only = T)
}
<<<<<<< HEAD
expressway<- readOGR(dsn = 'RoadNetwork', layer = 'roads_expressway_simplified')
# Create accidents ppp
accidents <- readOGR('final_data', 'accidents')
accidents_sp <- as(accidents, 'SpatialPoints')
accidents_ppp <- as.ppp(accidents_sp)
# Create expressway linnet
expressway_psp <- as.psp(expressway)
expressway_linnet <- as.linnet.psp(expressway_psp, sparse = TRUE)
# Create lpp
accidents_lpp <- lpp(accidents_ppp, expressway_linnet)
#system.time(envelope.lpp(accidents_lpp,linearK, nsim = 99, r = seq(0,1,by=0.20)))
envelope.lpp(accidents_lpp,linearK, nsim = 3, r=seq(0,1,0.2))
plot(density.lpp(accidents_lpp, 100))
View(accidents)
View(accidents)
View(accidents)
View(accidents)
View(accidents)
View(accidents)
packages = c('tmap', 'sf', 'tidyverse', 'RColorBrewer', 'classInt', 'spatstat', 'rgdal', 'maptools', 'rgeos')
=======
data <- read_csv('csv/LTATrafficDataClean2.csv')
dataSF <- st_as_sf(data, coords =c( 'Longitude', 'Latitude') , crs = '+proj=longlat +datum=WGS84 +no_defs')
expressway<- readShapeSpatial('RoadNetwork/roads_expressway')
sgmap <- st_read('data.gov.sg/planningArea', 'MP14_PLNG_AREA_WEB_PL')
dataSF_svy21 <- st_transform(dataSF, 3414)
accidents <- dataSF_svy21 %>% filter(Type == 'Accident')
tm_shape(sgmap) + tm_borders()  + tm_shape(accidents) + tm_symbols(size = 0.5)
st_write(accidents, "csv/accidents.csv", layer_options = "GEOMETRY=AS_XY")
packages = c('tmap', 'sf', 'tidyverse', 'RColorBrewer', 'classInt', 'spatstat', 'rgdal', 'maptools')
>>>>>>> 8b5dadc926b8d0c15b1d6270a7ff4de4ad0385eb
for (p in packages){
if(!require(p, character.only = T)){
install.packages(p)
}
library(p, character.only = T)
}
expressway<- readOGR(dsn = 'RoadNetwork', layer = 'roads_expressway_simplified')
# Create accidents ppp
accidents <- readOGR('test', 'accidents2')
accidents_sp <- as(accidents, 'SpatialPoints')
accidents_ppp <- as.ppp(accidents_sp)
# Create expressway linnet
expressway_psp <- as.psp(expressway)
expressway_linnet <- as.linnet.psp(expressway_psp, sparse = TRUE)
# Create lpp
accidents_lpp <- lpp(accidents_ppp, expressway_linnet)
plot(density.lpp(accidents_lpp, 100))
# Create accidents ppp
accidents <- read_csv('test/accidents.csv')
accidents
# Create accidents ppp
accidents <- read_csv('test/accidents.csv')
SpatialPoints(accidents$X, accidents$Y)
SpatialPoints((accidents$X, accidents$Y), proj4string = '+proj=tmerc +lat_0=1.366666666666667 +lon_0=103.8333333333333 +k=1 +x_0=28001.642 +y_0=38744.572 +ellps=WGS84 +units=m +no_defs ')
?SpatialPoints
SpatialPoints(cbind(accidents$X, accidents$Y), proj4string = '+proj=tmerc +lat_0=1.366666666666667 +lon_0=103.8333333333333 +k=1 +x_0=28001.642 +y_0=38744.572 +ellps=WGS84 +units=m +no_defs ')
SpatialPoints(cbind(accidents$X, accidents$Y), proj4string = CRS(3414))
SpatialPoints(cbind(accidents$X, accidents$Y), proj4string = CRS('3414'))
SpatialPoints(cbind(accidents$X, accidents$Y))
proj4string(accidents_sp) <- '+proj=tmerc +lat_0=1.366666666666667 +lon_0=103.8333333333333 +k=1 +x_0=28001.642 +y_0=38744.572 +ellps=WGS84 +units=m +no_defs '
#accidents_sp <- as(accidents, 'SpatialPoints')
accidents_ppp <- as.ppp(accidents_sp)
expressway_psp <- as.psp(expressway)
expressway_linnet <- as.linnet.psp(expressway_psp, sparse = TRUE)
# Create lpp
accidents_lpp <- lpp(accidents_ppp, expressway_linnet)
plot(density.lpp(accidents_lpp, 100))
accidents_ppp <- ppp(accidents[,1], accidents[,2], c(min(accidents[,1]), max(accidents[,1])), c(min(accidents[,2]), max(accidents[,2])))
min(accidents[,1])
accidents[,1]
# Create accidents ppp
accidents <- read.csv('test/accidents.csv')
accidents_ppp <- ppp(accidents[,1], accidents[,2], c(min(accidents[,1]), max(accidents[,1])), c(min(accidents[,2]), max(accidents[,2])))
# Create lpp
accidents_lpp <- lpp(accidents_ppp, expressway_linnet)
plot(density.lpp(accidents_lpp, 100))
packages = c('tmap', 'sf', 'tidyverse', 'RColorBrewer', 'classInt', 'spatstat', 'rgdal', 'maptools', 'rgeos')
for (p in packages){
if(!require(p, character.only = T)){
install.packages(p)
}
library(p, character.only = T)
}
expressway<- readOGR(dsn = 'RoadNetwork', layer = 'roads_expressway_simplified')
# Create accidents ppp
accidents <- read.csv('test/accidents.csv')
accidents_sp <- SpatialPoints(cbind(accidents$X, accidents$Y))
proj4string(accidents_sp) <- '+proj=tmerc +lat_0=1.366666666666667 +lon_0=103.8333333333333 +k=1 +x_0=28001.642 +y_0=38744.572 +ellps=WGS84 +units=m +no_defs '
#accidents_sp <- as(accidents, 'SpatialPoints')
accidents_ppp <- as.ppp(accidents_sp)
accidents_ppp <- ppp(accidents[,1], accidents[,2], c(min(accidents[,1]), max(accidents[,1])), c(min(accidents[,2]), max(accidents[,2])))
# Create expressway linnet
expressway_psp <- as.psp(expressway)
expressway_linnet <- as.linnet.psp(expressway_psp, sparse = TRUE)
# Create lpp
accidents_lpp <- lpp(accidents_ppp, expressway_linnet)
plot(density.lpp(accidents_lpp, 100))
plot(density.lpp(accidents_lpp, 1000))
plot(density.lpp(accidents_lpp, 20))
packages = c('tmap', 'sf', 'tidyverse', 'RColorBrewer', 'classInt', 'spatstat', 'rgdal', 'maptools', 'rgeos')
for (p in packages){
if(!require(p, character.only = T)){
install.packages(p)
}
library(p, character.only = T)
}
expressway<- readOGR(dsn = 'RoadNetwork', layer = 'roads_expressway_simplified')
analysis_area <- 'PIE'
# Prepare accidents
accidents <- readOGR('FinalAccidents', 'accidents_on_expressway')
#accidents_subset <- accidents[accidents@data[['Accident_L']] == analysis_area,]
accidents_subset <- accidents
accidents_sp <- as(accidents_subset, 'SpatialPoints')
accidents_ppp <- as.ppp(accidents_sp)
#Prepare expressway
#expressway_subset <- expressway[expressway@data[['ref']] == analysis_area,]
expressway_subset <- expressway
expressway_subset_psp <- as.psp(expressway_subset)
expressway_subset_linnet <- as.linnet.psp(expressway_subset_psp, sparse = TRUE)
#Create accidents lpp
accidents_lpp <- lpp(accidents_ppp, expressway_subset_linnet)
#system.time(envelope.lpp(accidents_lpp,linearK, nsim = 99, r = seq(0,1,by=0.20)))
plot(density.lpp(accidents_lpp, 2000))
accidents <- readOGR('FinalAccidents', 'accidents_on_expressway')
#accidents_subset <- accidents[accidents@data[['Accident_L']] == analysis_area,]
accidents_subset <- accidents
accidents_sp <- as(accidents_subset, 'SpatialPoints')
accidents_ppp <- as.ppp(accidents_sp)
#Prepare expressway
expressway_subset <- expressway[expressway@data[['ref']] %in% c('PIE', 'BKE'),]
expressway_subset_psp <- as.psp(expressway_subset)
expressway_subset_linnet <- as.linnet.psp(expressway_subset_psp, sparse = TRUE)
#Create accidents lpp
accidents_lpp <- lpp(accidents_ppp, expressway_subset_linnet)
#system.time(envelope.lpp(accidents_lpp,linearK, nsim = 99, r = seq(0,1,by=0.20)))
plot(density.lpp(accidents_lpp, 2000))
expressway_subset <- expressway[expressway@data[['ref']] %in% c('AYE',
'BKE',
'CTE',
'ECP',
'KJE',
'KPE',
'MCE',
'PIE',
'SLE',
'TPE'
),]
expressway_subset_psp <- as.psp(expressway_subset)
expressway_subset_linnet <- as.linnet.psp(expressway_subset_psp, sparse = TRUE)
#Create accidents lpp
accidents_lpp <- lpp(accidents_ppp, expressway_subset_linnet)
#system.time(envelope.lpp(accidents_lpp,linearK, nsim = 99, r = seq(0,1,by=0.20)))
plot(density.lpp(accidents_lpp, 2000))
expressway_subset <- expressway[expressway@data[['ref']] %in% c('AYE',
'BKE',
'CTE',
'ECP',
'KJE',
'KPE',
'MCE',
'PIE',
'SLE',
),]
expressway_subset <- expressway[expressway@data[['ref']] %in% c('AYE',
'BKE',
'CTE',
'ECP',
'KJE',
'KPE',
'MCE',
'PIE',
'SLE'
),]
expressway_subset_psp <- as.psp(expressway_subset)
expressway_subset_linnet <- as.linnet.psp(expressway_subset_psp, sparse = TRUE)
#Create accidents lpp
accidents_lpp <- lpp(accidents_ppp, expressway_subset_linnet)
#system.time(envelope.lpp(accidents_lpp,linearK, nsim = 99, r = seq(0,1,by=0.20)))
plot(density.lpp(accidents_lpp, 2000))
expressway_subset <- expressway[expressway@data[['ref']] %in% c('AYE',
'BKE',
'CTE',
'ECP',
'KJE',
'KPE',
'PIE',
'SLE'
),]
expressway_subset_psp <- as.psp(expressway_subset)
expressway_subset_linnet <- as.linnet.psp(expressway_subset_psp, sparse = TRUE)
#Create accidents lpp
accidents_lpp <- lpp(accidents_ppp, expressway_subset_linnet)
#system.time(envelope.lpp(accidents_lpp,linearK, nsim = 99, r = seq(0,1,by=0.20)))
plot(density.lpp(accidents_lpp, 2000))
expressway_subset <- expressway[expressway@data[['ref']] %in% c('AYE',
'BKE',
'CTE',
'KJE',
'KPE',
'PIE',
'SLE'
),]
expressway_subset_psp <- as.psp(expressway_subset)
expressway_subset_linnet <- as.linnet.psp(expressway_subset_psp, sparse = TRUE)
#Create accidents lpp
accidents_lpp <- lpp(accidents_ppp, expressway_subset_linnet)
#system.time(envelope.lpp(accidents_lpp,linearK, nsim = 99, r = seq(0,1,by=0.20)))
plot(density.lpp(accidents_lpp, 2000))
expressway_subset <- expressway[expressway@data[['ref']] %in% c('AYE',
'BKE',
'CTE',
'PIE',
'SLE'
),]
expressway_subset_psp <- as.psp(expressway_subset)
expressway_subset_linnet <- as.linnet.psp(expressway_subset_psp, sparse = TRUE)
#Create accidents lpp
accidents_lpp <- lpp(accidents_ppp, expressway_subset_linnet)
#system.time(envelope.lpp(accidents_lpp,linearK, nsim = 99, r = seq(0,1,by=0.20)))
plot(density.lpp(accidents_lpp, 2000))
expressway_subset <- expressway[expressway@data[['ref']] %in% c(
'BKE',
'CTE',
'PIE',
'SLE'
),]
expressway_subset_psp <- as.psp(expressway_subset)
expressway_subset_linnet <- as.linnet.psp(expressway_subset_psp, sparse = TRUE)
#Create accidents lpp
accidents_lpp <- lpp(accidents_ppp, expressway_subset_linnet)
#system.time(envelope.lpp(accidents_lpp,linearK, nsim = 99, r = seq(0,1,by=0.20)))
plot(density.lpp(accidents_lpp, 2000))
#Prepare expressway
expressway_subset <- expressway[expressway@data[['ref']] %in% c(
'BKE',
'CTE',
),]
expressway_subset <- expressway[expressway@data[['ref']] %in% c(
'BKE',
'CTE'
),]
expressway_subset_psp <- as.psp(expressway_subset)
expressway_subset_linnet <- as.linnet.psp(expressway_subset_psp, sparse = TRUE)
#Create accidents lpp
accidents_lpp <- lpp(accidents_ppp, expressway_subset_linnet)
#system.time(envelope.lpp(accidents_lpp,linearK, nsim = 99, r = seq(0,1,by=0.20)))
plot(density.lpp(accidents_lpp, 2000))
#Prepare expressway
expressway_subset <- expressway[expressway@data[['ref']] %in% c(
'BKE'
),]
expressway_subset_psp <- as.psp(expressway_subset)
expressway_subset_linnet <- as.linnet.psp(expressway_subset_psp, sparse = TRUE)
#Create accidents lpp
accidents_lpp <- lpp(accidents_ppp, expressway_subset_linnet)
#system.time(envelope.lpp(accidents_lpp,linearK, nsim = 99, r = seq(0,1,by=0.20)))
plot(density.lpp(accidents_lpp, 2000))
expressway_subset <- expressway[expressway@data[['ref']] %in% c(
'BKE', 'SLE'
),]
expressway_subset_psp <- as.psp(expressway_subset)
expressway_subset_linnet <- as.linnet.psp(expressway_subset_psp, sparse = TRUE)
#Create accidents lpp
accidents_lpp <- lpp(accidents_ppp, expressway_subset_linnet)
#system.time(envelope.lpp(accidents_lpp,linearK, nsim = 99, r = seq(0,1,by=0.20)))
plot(density.lpp(accidents_lpp, 2000))
expressway_subset <- expressway[expressway@data[['ref']] %in% c(
'BKE', 'SLE', 'CTE'
),]
expressway_subset_psp <- as.psp(expressway_subset)
expressway_subset_linnet <- as.linnet.psp(expressway_subset_psp, sparse = TRUE)
#Create accidents lpp
accidents_lpp <- lpp(accidents_ppp, expressway_subset_linnet)
#system.time(envelope.lpp(accidents_lpp,linearK, nsim = 99, r = seq(0,1,by=0.20)))
plot(density.lpp(accidents_lpp, 2000))
#Prepare expressway
expressway_subset <- expressway[expressway@data[['ref']] %in% c(
'CTE'
),]
expressway_subset_psp <- as.psp(expressway_subset)
expressway_subset_linnet <- as.linnet.psp(expressway_subset_psp, sparse = TRUE)
#Create accidents lpp
accidents_lpp <- lpp(accidents_ppp, expressway_subset_linnet)
#system.time(envelope.lpp(accidents_lpp,linearK, nsim = 99, r = seq(0,1,by=0.20)))
plot(density.lpp(accidents_lpp, 2000))
#Prepare expressway
expressway_subset <- expressway[expressway@data[['ref']] %in% c(
'CTE', 'BKE'
),]
expressway_subset_psp <- as.psp(expressway_subset)
expressway_subset_linnet <- as.linnet.psp(expressway_subset_psp, sparse = TRUE)
#Create accidents lpp
accidents_lpp <- lpp(accidents_ppp, expressway_subset_linnet)
#system.time(envelope.lpp(accidents_lpp,linearK, nsim = 99, r = seq(0,1,by=0.20)))
plot(density.lpp(accidents_lpp, 2000))
expressway_subset <- expressway[expressway@data[['ref']] %in% c(
'SLE', 'BKE', 'AYE', 'PIE'
),]
expressway_subset_psp <- as.psp(expressway_subset)
expressway_subset_linnet <- as.linnet.psp(expressway_subset_psp, sparse = TRUE)
#Create accidents lpp
accidents_lpp <- lpp(accidents_ppp, expressway_subset_linnet)
#system.time(envelope.lpp(accidents_lpp,linearK, nsim = 99, r = seq(0,1,by=0.20)))
plot(density.lpp(accidents_lpp, 2000))
plot(expressway_subset_linnet)
accidents <- readOGR('FinalAccidents', 'accidents_on_expressway')
#accidents_subset <- accidents[accidents@data[['Accident_L']] == analysis_area,]
accidents_subset <- accidents
accidents_sp <- as(accidents_subset, 'SpatialPoints')
accidents_ppp <- as.ppp(accidents_sp)
# Create expressway linnet
roadNetwork <- readShapeSpatial("test/RoadNetwork/roads_expressway", CRS("+init=epsg:3414"))
roadNetwork_psp <- as.psp(roadNetwork, window=NULL, marks=NULL, check=spatstat.options("checksegments"), fatal=TRUE)
roadNetwork_linnet <- as.linnet.psp(roadNetwork_psp, sparse=TRUE)
# Create lpp
accidents_lpp <- lpp(accidents_ppp, roadNetwork_linnet)
plot(density.lpp(accidents_lpp, 100))
plot(density.lpp(accidents_lpp, 100))
plot(density.lpp(accidents_lpp, 1000))
accidents <- readOGR('FinalAccidents', 'accidents_on_expressway')
#accidents_subset <- accidents[accidents@data[['Accident_L']] == analysis_area,]
accidents_subset <- accidents
accidents_sp <- as(accidents_subset, 'SpatialPoints')
accidents_ppp <- as.ppp(accidents_sp)
# Create expressway linnet
roadNetwork <- readShapeSpatial("RoadNetwork/roads_expressway", CRS("+init=epsg:3414"))
roadNetwork_psp <- as.psp(roadNetwork, window=NULL, marks=NULL, check=spatstat.options("checksegments"), fatal=TRUE)
roadNetwork_linnet <- as.linnet.psp(roadNetwork_psp, sparse=TRUE)
# Create lpp
accidents_lpp <- lpp(accidents_ppp, roadNetwork_linnet)
plot(density.lpp(accidents_lpp, 1000))
accidents <- readOGR('FinalAccidents', 'accidents_on_expressway')
#accidents_subset <- accidents[accidents@data[['Accident_L']] == analysis_area,]
accidents_subset <- accidents
accidents_sp <- as(accidents_subset, 'SpatialPoints')
accidents_ppp <- as.ppp(accidents_sp)
# Create expressway linnet
roadNetwork <- readShapeSpatial("test/RoadNetwork/roads_expressway", CRS("+init=epsg:3414"))
roadNetwork_psp <- as.psp(roadNetwork, window=NULL, marks=NULL, check=spatstat.options("checksegments"), fatal=TRUE)
roadNetwork_linnet <- as.linnet.psp(roadNetwork_psp, sparse=TRUE)
# Create lpp
accidents_lpp <- lpp(accidents_ppp, roadNetwork_linnet)
plot(density.lpp(accidents_lpp, 1000))
accidents <- readOGR('FinalAccidents', 'accidents_on_expressway')
#accidents_subset <- accidents[accidents@data[['Accident_L']] == analysis_area,]
accidents_subset <- accidents
accidents_sp <- as(accidents_subset, 'SpatialPoints')
accidents_ppp <- as.ppp(accidents_sp)
# Create expressway linnet
roadNetwork <- readShapeSpatial("test/RoadNetwork/roads_expressway2", CRS("+init=epsg:3414"))
roadNetwork_psp <- as.psp(roadNetwork, window=NULL, marks=NULL, check=spatstat.options("checksegments"), fatal=TRUE)
roadNetwork_linnet <- as.linnet.psp(roadNetwork_psp, sparse=TRUE)
# Create lpp
accidents_lpp <- lpp(accidents_ppp, roadNetwork_linnet)
plot(density.lpp(accidents_lpp, 1000))
accidents <- readOGR('FinalAccidents', 'accidents_on_expressway')
#accidents_subset <- accidents[accidents@data[['Accident_L']] == analysis_area,]
accidents_subset <- accidents
accidents_sp <- as(accidents_subset, 'SpatialPoints')
accidents_ppp <- as.ppp(accidents_sp)
# Create expressway linnet
roadNetwork <- readShapeSpatial("test/RoadNetwork/roads_expressway", CRS("+init=epsg:3414"))
roadNetwork_psp <- as.psp(roadNetwork, window=NULL, marks=NULL, check=spatstat.options("checksegments"), fatal=TRUE)
roadNetwork_linnet <- as.linnet.psp(roadNetwork_psp, sparse=TRUE)
# Create lpp
accidents_lpp <- lpp(accidents_ppp, roadNetwork_linnet)
plot(density.lpp(accidents_lpp, 1000))
accidents <- readOGR('FinalAccidents', 'accidents_on_expressway')
#accidents_subset <- accidents[accidents@data[['Accident_L']] == analysis_area,]
accidents_subset <- accidents
accidents_sp <- as(accidents_subset, 'SpatialPoints')
accidents_ppp <- as.ppp(accidents_sp)
# Create expressway linnet
roadNetwork <- readShapeSpatial("test/RoadNetwork/roads_expressway", CRS("+init=epsg:3414"))
roadNetwork_psp <- as.psp(roadNetwork, window=NULL, marks=NULL, check=spatstat.options("checksegments"), fatal=TRUE)
roadNetwork_linnet <- as.linnet.psp(roadNetwork_psp, sparse=TRUE)
# Create lpp
accidents_lpp <- lpp(accidents_ppp, roadNetwork_linnet)
plot(density.lpp(accidents_lpp, 1000))
?gsimplify
?gSimplify
roadNetwork <- readShapeSpatial("test/RoadNetwork/roads_expressway", CRS("+init=epsg:3414"))
roadNetwork <- readShapeSpatial("test/RoadNetwork/roads_expressway", CRS("+init=epsg:3414"))
roadNetwork<- gSimplify(roadNetwork, tol = 100)
roadNetwork_psp <- as.psp(roadNetwork, window=NULL, marks=NULL, check=spatstat.options("checksegments"), fatal=TRUE)
roadNetwork_linnet <- as.linnet.psp(roadNetwork_psp, sparse=TRUE)
# Create lpp
accidents_lpp <- lpp(accidents_ppp, roadNetwork_linnet)
plot(density.lpp(accidents_lpp, 1000))
roadNetwork <- readShapeSpatial("test/RoadNetwork/roads_expressway", CRS("+init=epsg:3414"))
roadNetwork_psp <- as.psp(roadNetwork, window=NULL, marks=NULL, check=spatstat.options("checksegments"), fatal=TRUE)
roadNetwork_linnet <- as.linnet.psp(roadNetwork_psp, sparse=TRUE)
# Create lpp
accidents_lpp <- lpp(accidents_ppp, roadNetwork_linnet)
plot(density.lpp(accidents_lpp, 1000))
roadNetwork <- readShapeSpatial("test/RoadNetwork/roads_expressway", CRS("+init=epsg:3414"))
roadNetwork<- gSimplify(roadNetwork, tol = 1)
roadNetwork_psp <- as.psp(roadNetwork, window=NULL, marks=NULL, check=spatstat.options("checksegments"), fatal=TRUE)
roadNetwork_linnet <- as.linnet.psp(roadNetwork_psp, sparse=TRUE)
# Create lpp
accidents_lpp <- lpp(accidents_ppp, roadNetwork_linnet)
plot(density.lpp(accidents_lpp, 1000))
roadNetwork <- readShapeSpatial("test/RoadNetwork/roads_expressway", CRS("+init=epsg:3414"))
roadNetwork<- gSimplify(roadNetwork, tol = 0.1)
roadNetwork_psp <- as.psp(roadNetwork, window=NULL, marks=NULL, check=spatstat.options("checksegments"), fatal=TRUE)
roadNetwork_linnet <- as.linnet.psp(roadNetwork_psp, sparse=TRUE)
# Create lpp
accidents_lpp <- lpp(accidents_ppp, roadNetwork_linnet)
plot(density.lpp(accidents_lpp, 1000))
roadNetwork <- readShapeSpatial("test/RoadNetwork/roads_expressway", CRS("+init=epsg:3414"))
roadNetwork<- gSimplify(roadNetwork, tol = 0.01)
roadNetwork_psp <- as.psp(roadNetwork, window=NULL, marks=NULL, check=spatstat.options("checksegments"), fatal=TRUE)
roadNetwork_linnet <- as.linnet.psp(roadNetwork_psp, sparse=TRUE)
# Create lpp
accidents_lpp <- lpp(accidents_ppp, roadNetwork_linnet)
plot(density.lpp(accidents_lpp, 1000))
accidents <- readOGR('FinalAccidents', 'accidents_on_expressway')
#accidents_subset <- accidents[accidents@data[['Accident_L']] == analysis_area,]
accidents_subset <- accidents
accidents_sp <- as(accidents_subset, 'SpatialPoints')
accidents_ppp <- as.ppp(accidents_sp)
# Create expressway linnet
roadNetwork <- readShapeSpatial("test/RoadNetwork/roads_expressway", CRS("+init=epsg:3414"))
roadNetwork_psp <- as.psp(roadNetwork, window=NULL, marks=NULL, check=spatstat.options("checksegments"), fatal=TRUE)
roadNetwork_linnet <- as.linnet.psp(roadNetwork_psp, sparse=TRUE)
# Create lpp
accidents_lpp <- lpp(accidents_ppp, roadNetwork_linnet)
plot(density.lpp(accidents_lpp, 1000))
roadNetwork <- readShapeSpatial("test/RoadNetwork/roads_expressway", CRS("+init=epsg:3414"))
roadNetwork <- gSimplify(roadNetwork, tol = 1000 )
roadNetwork_psp <- as.psp(roadNetwork, window=NULL, marks=NULL, check=spatstat.options("checksegments"), fatal=TRUE)
roadNetwork_linnet <- as.linnet.psp(roadNetwork_psp, sparse=TRUE)
# Create lpp
accidents_lpp <- lpp(accidents_ppp, roadNetwork_linnet)
#system.time(envelope.lpp(accidents_lpp,linearK, nsim = 99, r = seq(0,1,by=0.20)))
system.time(envelope.lpp(accidents_lpp,linearK, nsim = 3, r=seq(0,0.01,0.002)))
roadNetwork <- readShapeSpatial("test/RoadNetwork/roads_expressway", CRS("+init=epsg:3414"))
roadNetwork <- gSimplify(roadNetwork, tol = 1000 )
roadNetwork_psp <- as.psp(roadNetwork, window=NULL, marks=NULL, check=spatstat.options("checksegments"), fatal=TRUE)
roadNetwork_linnet <- as.linnet.psp(roadNetwork_psp, sparse=TRUE)
# Create lpp
accidents_lpp <- lpp(accidents_ppp, roadNetwork_linnet)
#system.time(envelope.lpp(accidents_lpp,linearK, nsim = 99, r = seq(0,1,by=0.20)))
system.time(envelope.lpp(accidents_lpp,linearK, nsim = 3, r=seq(0,0.01,0.002)))
roadNetwork <- readShapeSpatial("test/RoadNetwork/roads_expressway", CRS("+init=epsg:3414"))
roadNetwork <- gSimplify(roadNetwork, tol = 1000 )
roadNetwork_psp <- as.psp(roadNetwork, window=NULL, marks=NULL, check=spatstat.options("checksegments"), fatal=TRUE)
roadNetwork_linnet <- as.linnet.psp(roadNetwork_psp, sparse=TRUE)
# Create lpp
accidents_lpp <- lpp(accidents_ppp, roadNetwork_linnet)
#system.time(envelope.lpp(accidents_lpp,linearK, nsim = 99, r = seq(0,1,by=0.20)))
system.time(envelope.lpp(accidents_lpp,linearK, nsim = 3, r=seq(0,0.0001,0.00002)))
roadNetwork <- readShapeSpatial("test/RoadNetwork/roads_expressway", CRS("+init=epsg:3414"))
roadNetwork <- gSimplify(roadNetwork, tol = 100000 )
roadNetwork_psp <- as.psp(roadNetwork, window=NULL, marks=NULL, check=spatstat.options("checksegments"), fatal=TRUE)
roadNetwork_linnet <- as.linnet.psp(roadNetwork_psp, sparse=TRUE)
# Create lpp
accidents_lpp <- lpp(accidents_ppp, roadNetwork_linnet)
#system.time(envelope.lpp(accidents_lpp,linearK, nsim = 99, r = seq(0,1,by=0.20)))
system.time(envelope.lpp(accidents_lpp,linearK, nsim = 3, r=seq(0,0.000001,0.0000002)))
shiny::runApp('C:/Users/vince/Google Drive/3.4 SMU/3.2 Geospatial/Week 12/063-superzip-example/063-superzip-example')
packages = c('tmap', 'sf', 'tidyverse', 'RColorBrewer', 'classInt', 'spatstat', 'rgdal', 'maptools', 'rgeos')
for (p in packages){
if(!require(p, character.only = T)){
install.packages(p)
}
library(p, character.only = T)
}
<<<<<<< HEAD
# Prepare accidents
accidents <- readOGR('FinalAccidents', 'accidents_on_expressway')
#accidents_subset <- accidents[accidents@data[['Accident_L']] == analysis_area,]
accidents_subset <- accidents
accidents_sp <- as(accidents_subset, 'SpatialPoints')
accidents_ppp <- as.ppp(accidents_sp)
roadNetwork <- readShapeSpatial("test/RoadNetwork/roads_expressway", CRS("+init=epsg:3414"))
roadNetwork <- gSimplify(roadNetwork, tol = 100000 )
roadNetwork_psp <- as.psp(roadNetwork, window=NULL, marks=NULL, check=spatstat.options("checksegments"), fatal=TRUE)
roadNetwork_linnet <- as.linnet.psp(roadNetwork_psp, sparse=TRUE)
# Create lpp
accidents_lpp <- lpp(accidents_ppp, roadNetwork_linnet)
#system.time(envelope.lpp(accidents_lpp,linearK, nsim = 99, r = seq(0,1,by=0.20)))
system.time(envelope.lpp(accidents_lpp,linearK, nsim = 3, r=seq(0,0.000001,0.0000002)))
library(SpatialEpiApp)
install.packages(SpatialEpiApp)
install.packages('SpatialEpiApp')
library(SpatialEpiApp)
SpatialEpiApp
SpatialEpiApp::run_app()
# Prepare accidents
accidents <- readOGR('FinalAccidents', 'accidents_on_expressway')
#accidents_subset <- accidents[accidents@data[['Accident_L']] == analysis_area,]
accidents_subset <- accidents
accidents_sp <- as(accidents_subset, 'SpatialPoints')
accidents_ppp <- as.ppp(accidents_sp)
roadNetwork <- readShapeSpatial("test/RoadNetwork/roads_expressway", CRS("+init=epsg:3414"))
# simplify road network
roadNetwork <- gSimplify(roadNetwork, tol = 100000 )
roadNetwork_psp <- as.psp(roadNetwork, window=NULL, marks=NULL, check=spatstat.options("checksegments"), fatal=TRUE)
roadNetwork_linnet <- as.linnet.psp(roadNetwork_psp, sparse=TRUE)
# Create lpp
accidents_lpp <- lpp(accidents_ppp, roadNetwork_linnet)
#system.time(envelope.lpp(accidents_lpp,linearK, nsim = 99, r = seq(0,1,by=0.20)))
system.time(envelope.lpp(accidents_lpp,linearK, nsim = 3, r=seq(0,0.000001,0.0000002)))
=======
data <- read_csv('csv/LTATrafficDataClean2.csv')
dataSF <- st_as_sf(data, coords =c( 'Longitude', 'Latitude') , crs = '+proj=longlat +datum=WGS84 +no_defs')
expressway<- readShapeSpatial('RoadNetwork/roads_expressway')
sgmap <- st_read('data.gov.sg/planningArea', 'MP14_PLNG_AREA_WEB_PL')
dataSF_svy21 <- st_transform(dataSF, 3414)
accidents <- dataSF_svy21 %>% filter(Type == 'Accident')
tm_shape(sgmap) + tm_borders()  + tm_shape(accidents) + tm_symbols(size = 0.5)
accidents_xy <- read.csv('csv/accidents.csv')
accidents_ppp <- ppp(accidents_xy[,1], accidents_xy[,2], c(min(accidents_xy[,1]), max(accidents_xy[,1])), c(min(accidents_xy[,2]), max(accidents_xy[,2])))
plot(accidents_ppp)
summary(accidents_ppp)
plot(Kest(accidents_ppp))
plot(envelope(accidents_ppp,Kest))
plot(density(accidents_ppp))
expressway_psp <- as.psp(expressway)
expressway_linnet <- as.linnet.psp(expressway_psp, sparse = TRUE)
accidents_lpp <- lpp(accidents_ppp, expressway_linnet)
plot(density.lpp(accidents_lpp, 1000))
mce_kpe_camera <- st_read('data.gov.sg/mce-kpe-speed-camera-shp', 'MCE_KPE_SPEED_CAMERA')
mce_kpe_camera$Type <- 'MCE_KPE_Camera'
st_write(mce_kpe_camera, "csv/mce_kpe_camera.csv", layer_options = "GEOMETRY=AS_XY")
mce_kpe_camera_xy <- read.csv('csv/mce_kpe_camera.csv')
mce_kpe_camera_join <- select(mce_kpe_camera_xy, X, Y, Type )
accidents_join <- select(accidents_xy, X, Y, Type)
accidents_mce_kpe_cameras <- rbind(accidents_join, mce_kpe_camera_join)
accidents_mce_ppp <- ppp(accidents_mce_kpe_cameras[,1], accidents_mce_kpe_cameras[,2], c(min(accidents_mce_kpe_cameras[,1]), max(accidents_mce_kpe_cameras[,1])), c(min(accidents_mce_kpe_cameras[,2]), max(accidents_mce_kpe_cameras[,2])), marks = accidents_mce_kpe_cameras$Type)
accidents_mce_lpp <- lpp(accidents_mce_ppp, expressway_linnet)
linearKcross(accidents_mce_lpp, 'Accident' , 'MCE_KPE_Camera')
packages = c('tmap', 'sf', 'tidyverse', 'RColorBrewer', 'classInt', 'spatstat', 'rgdal', 'maptools')
for (p in packages){
if(!require(p, character.only = T)){
install.packages(p)
}
library(p, character.only = T)
}
analysis_area <- 'BKE'
# Prepare accidents
accidents <- readOGR('FinalAccidents', 'accidents_on_expressway')
accidents_subset <- accidents[accidents@data$Accident_L == analysis_area,]
accidents_sp <- as(accidents_subset, 'SpatialPoints')
accidents_ppp <- as.ppp(accidents_sp)
#Prepare expressway
expressway_subset <- expressway[expressway@data$ref == analysis_area,]
library(readr)
library(sf)
trafficReport <- read_csv("data/LTATrafficDataClean2.csv")
trafficReport_shp <- st_as_sf(trafficReport, coords = c("Longitude", "Latitude"), crs = "+proj=longlat +datum=WGS84 +no_defs")
traffic_Report_svy21 <- st_transform(trafficReport_shp, crs = 3414)
View(accidents)
View(accidents)
testingfilter <- accidents %>% filter(PLN_AREA_N == "ANG MO KIO")
packages = c('tmap', 'sf', 'tidyverse', 'RColorBrewer', 'classInt', 'spatstat', 'rgdal', 'maptools')
for (p in packages){
if(!require(p, character.only = T)){
install.packages(p)
}
library(p, character.only = T)
}
analysis_area <- 'BKE'
# Prepare accidents
accidents <- readOGR('FinalAccidents', 'accidents_on_expressway')
accidents_subset <- accidents[accidents@data$Accident_L == analysis_area,]
accidents_sp <- as(accidents_subset, 'SpatialPoints')
accidents_ppp <- as.ppp(accidents_sp)
#Prepare expressway
expressway_subset <- expressway[expressway@data$ref == analysis_area,]
analysis_area <- 'SLE'
# Prepare cameras
cameras_accidents <- readOGR('Cameras', 'cameras_accidents')
cameras_accidents_subset <- cameras_accidents[cameras_accidents@data$Expressway == analysis_area,]
cameras_accidents_sp <- as(cameras_accidents_subset, 'SpatialPoints')
cameras_accidents_ppp <- as.ppp(cameras_accidents_sp)
marks(cameras_accidents_ppp) <- cameras_accidents_subset@data$Type
#Prepare expressway
expressway_subset <- expressway[expressway@data$ref == analysis_area,]
data <- read_csv('csv/LTATrafficDataClean2.csv')
dataSF <- st_as_sf(data, coords =c( 'Longitude', 'Latitude') , crs = '+proj=longlat +datum=WGS84 +no_defs')
expressway<- readShapeSpatial('RoadNetwork/roads_expressway')
sgmap <- st_read('data.gov.sg/planningArea', 'MP14_PLNG_AREA_WEB_PL')
dataSF_svy21 <- st_transform(dataSF, 3414)
analysis_area <- 'BKE'
# Prepare accidents
accidents <- readOGR('FinalAccidents', 'accidents_on_expressway')
accidents_subset <- accidents[accidents@data$Accident_L == analysis_area,]
accidents_sp <- as(accidents_subset, 'SpatialPoints')
accidents_ppp <- as.ppp(accidents_sp)
#Prepare expressway
expressway_subset <- expressway[expressway@data$ref == analysis_area,]
expressway_subset_psp <- as.psp(expressway_subset)
expressway_subset_linnet <- as.linnet.psp(expressway_subset_psp)
#Create accidents lpp
accidents_lpp <- lpp(accidents_ppp, expressway_subset_linnet)
#system.time(envelope.lpp(accidents_lpp,linearK, nsim = 99, r = seq(0,1,by=0.20)))
plot(density.lpp(accidents_lpp, 2000))
plot(envelope.lpp(accidents_lpp,linearK, nsim = 99, r = seq(0,10000)))
analysis_area <- 'SLE'
# Prepare cameras
cameras_accidents <- readOGR('Cameras', 'cameras_accidents')
cameras_accidents_subset <- cameras_accidents[cameras_accidents@data$Expressway == analysis_area,]
cameras_accidents_sp <- as(cameras_accidents_subset, 'SpatialPoints')
cameras_accidents_ppp <- as.ppp(cameras_accidents_sp)
marks(cameras_accidents_ppp) <- cameras_accidents_subset@data$Type
#Prepare expressway
expressway_subset <- expressway[expressway@data$ref == analysis_area,]
expressway_subset_psp <- as.psp(expressway_subset)
expressway_subset_linnet <- as.linnet.psp(expressway_subset_psp)
#Create accidents lpp
cameras_accidents_lpp <- lpp(cameras_accidents_ppp, expressway_subset_linnet)
#Multitype K Function
linearKcross(cameras_accidents_lpp, 'Accident' , 'Camera')
plot(envelope.lpp(cameras_accidents_lpp,linearKcross, nsim = 50, i = 'Accident', j = 'Camera', r = seq(0,3000))) #, r = seq(0,3000)
library(rgdal)
library(polyCub) #install package polyCub
costaloutline <- readOGR("data/sg_map/CostalOutline.shp")
costaloutline_sp <- as(costaloutline, "SpatialPolygons")
costaloutline_owin <- as.owin.SpatialPolygons(costaloutline_sp)
costaloutline_mask <- as.mask(costaloutline_owin)
library(tidyverse)
library(spatstat)
accidents <- traffic_Report_svy21 %>% filter(Type == "Accident")
library(readr)
library(sf)
trafficReport <- read_csv("data/LTATrafficDataClean2.csv")
trafficReport_shp <- st_as_sf(trafficReport, coords = c("Longitude", "Latitude"), crs = "+proj=longlat +datum=WGS84 +no_defs")
traffic_Report_svy21 <- st_transform(trafficReport_shp, crs = 3414)
library(tidyverse)
library(spatstat)
accidents <- traffic_Report_svy21 %>% filter(Type == "Accident")
accidents_sp <- as(accidents, "Spatial")
heavytraffic <- traffic_Report_svy21 %>% filter(Type == "Heavy Traffic")
heavytraffic_sp <- as(heavytraffic, "Spatial")
accidents_ppp <- ppp(coordinates(accidents_sp)[,1], coordinates(accidents_sp)[,2], costaloutline_owin)
heavytraffic_ppp <- ppp(coordinates(heavytraffic_sp)[,1], coordinates(heavytraffic_sp)[,2], costaloutline_owin)
plot(accidents_ppp)
plot(heavytraffic_ppp)
library(maptools)
roadNetwork <- readShapeSpatial("data/RoadNetwork/roads_expressway", CRS("+init=epsg:3414"))
roadNetwork_psp <- as.psp(roadNetwork, window=NULL, marks=NULL, check=spatstat.options("checksegments"), fatal=TRUE)
roadNetwork_linnet <- as.linnet.psp(roadNetwork_psp, sparse=TRUE)
plot(roadNetwork_linnet)
analysis_area <- 'BKE'
# Prepare accidents
# accidents <- readOGR('FinalAccidents', 'accidents_on_expressway')
# accidents_subset <- accidents[accidents@data$Accident_L == analysis_area,]
# accidents_sp <- as(accidents_subset, 'SpatialPoints')
# accidents_ppp <- as.ppp(accidents_sp)
#Prepare expressway
# expressway_subset <- expressway[expressway@data$ref == analysis_area,]
# expressway_subset_psp <- as.psp(expressway_subset)
# expressway_subset_linnet <- as.linnet.psp(expressway_subset_psp)
#Create accidents lpp
# accidents_lpp <- lpp(accidents_ppp, expressway_subset_linnet)
accidents_lpp <- lpp(accidents_ppp, roadNetwork_linnet)
#system.time(envelope.lpp(accidents_lpp,linearK, nsim = 99, r = seq(0,1,by=0.20)))
plot(density.lpp(accidents_lpp, 2000))
plot(envelope.lpp(accidents_lpp,linearK, nsim = 99, r = seq(0,10000)))
analysis_area <- 'BKE'
# Prepare accidents
# accidents <- readOGR('FinalAccidents', 'accidents_on_expressway')
# accidents_subset <- accidents[accidents@data$Accident_L == analysis_area,]
# accidents_sp <- as(accidents_subset, 'SpatialPoints')
# accidents_ppp <- as.ppp(accidents_sp)
#Prepare expressway
# expressway_subset <- expressway[expressway@data$ref == analysis_area,]
# expressway_subset_psp <- as.psp(expressway_subset)
# expressway_subset_linnet <- as.linnet.psp(expressway_subset_psp)
#Create accidents lpp
# accidents_lpp <- lpp(accidents_ppp, expressway_subset_linnet)
accidents_lpp <- lpp(accidents_ppp, roadNetwork_linnet)
#system.time(envelope.lpp(accidents_lpp,linearK, nsim = 99, r = seq(0,1,by=0.20)))
plot(density.lpp(accidents_lpp, 2000))
plot(envelope.lpp(accidents_lpp,linearK, nsim = 3, r = seq(0,10000)))
packages = c('tmap', 'sf', 'tidyverse', 'RColorBrewer', 'classInt', 'spatstat', 'rgdal', 'maptools')
for (p in packages){
if(!require(p, character.only = T)){
install.packages(p)
}
library(p, character.only = T)
}
library(rgdal)
library(polyCub) #install package polyCub
costaloutline <- readOGR("data/sg_map/CostalOutline.shp")
costaloutline_sp <- as(costaloutline, "SpatialPolygons")
costaloutline_owin <- as.owin.SpatialPolygons(costaloutline_sp)
costaloutline_mask <- as.mask(costaloutline_owin)
library(tidyverse)
library(spatstat)
accidents <- readOGR(dsn = "Vincent_Project/FinalAccidents",  layer = "accidents_on_expressway")
accidents_sp <- as(accidents, 'SpatialPoints')
# accidents <- traffic_Report_svy21 %>% filter(Type == "Accident")
# accidents_sp <- as(accidents, "Spatial")
# heavytraffic <- traffic_Report_svy21 %>% filter(Type == "Heavy Traffic")
# heavytraffic_sp <- as(heavytraffic, "Spatial")
accidents_ppp <- ppp(coordinates(accidents_sp)[,1], coordinates(accidents_sp)[,2], costaloutline_owin)
# heavytraffic_ppp <- ppp(coordinates(heavytraffic_sp)[,1], coordinates(heavytraffic_sp)[,2], costaloutline_owin)
plot(accidents_ppp)
# plot(heavytraffic_ppp)
library(maptools)
roadNetwork <- readShapeSpatial("data/RoadNetwork/roads_expressway", CRS("+init=epsg:3414"))
roadNetwork_psp <- as.psp(roadNetwork, window=NULL, marks=NULL, check=spatstat.options("checksegments"), fatal=TRUE)
roadNetwork_linnet <- as.linnet.psp(roadNetwork_psp, sparse=TRUE)
plot(roadNetwork_linnet)
library(spatstat)
accidentskde <- density.lpp(accidents_lpp, sigma=1000)
accidents_lpp <- lpp(accidents_ppp, roadNetwork_linnet)
#heavytraffic_lpp <- lpp(heavytraffic_ppp, roadNetwork_linnet)
plot(accidents_lpp)
#plot(heavytraffic_lpp)
library(spatstat)
accidentskde <- density.lpp(accidents_lpp, sigma=1000)
accidentskde_ppp <- density.ppp(accidents_ppp, sigma=1000)
plot(accidentskde)
library(tmap)
library(tmaptools)
library(maptools)
library(rgdal)
library(raster)
accidentkde_sgdf <- as.SpatialGridDataFrame.im(accidentskde)
d <- raster(accidentkde_sgdf)
dd <- disaggregate(d, 50)
accidentkde_ppp_sgdf <- as.SpatialGridDataFrame.im(accidentskde_ppp)
proj4string(accidentkde_sgdf) = CRS("+init=epsg:3414")
proj4string(dd) = CRS("+init=epsg:3414")
proj4string(accidentkde_ppp_sgdf) = CRS("+init=epsg:3414")
tmap_mode("view")
tm_shape(dd) +
tm_raster()
>>>>>>> 8b5dadc926b8d0c15b1d6270a7ff4de4ad0385eb
