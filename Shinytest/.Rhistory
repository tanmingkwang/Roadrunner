LTATraffic_sgmap_3414 <- st_transform(LTATraffic_sgmap, 3414)
View(LTATraffic_sgmap_3414)
View(LTATraffic_sgmap)
View(LTATraffic_sgmap)
data <- read_csv('csv/LTATrafficDataClean2.csv')
dataSF <- st_as_sf(data, coords =c( 'Longitude', 'Latitude') , crs = '+proj=longlat +datum=WGS84 +no_defs')
sgmap <- st_read('data.gov.sg/planningArea', 'MP14_PLNG_AREA_WEB_PL')
sgmap_4326 <- st_transform(sgmap, 4326)
LTATraffic_sgmap <- st_join(dataSF, sgmap_4326)
LTATraffic_sgmap  <- LTATraffic_sgmap %>% select(Type, Date, Time, Descriptions, PLN_AREA_C, PLN_AREA_N, REGION_C, REGION_N, geometry )
LTATraffic_sgmap_3414 <- st_transform(LTATraffic_sgmap, 3414)
st_write(LTATraffic_sgmap_3414, "csv/LTATraffic_sgmap.csv", layer_options = "GEOMETRY=AS_XY")
st_write(LTATraffic_sgmap_3414, 'LTATraffic_sgmap.shp')
st_write(LTATraffic_sgmap_3414, 'csv/LTATraffic_sgmap.shp')
accidents_sgmap_shp <- LTATraffic_sgmap_3414 %>% filter(Type = 'Accident')
accidents_sgmap_shp <- LTATraffic_sgmap_3414 %>% filter(Type == 'Accident')
View(accidents_sgmap_shp)
st_write(accidents_sgmap_shp, 'csv/accidents_sgmap.shp')
accidents_sgmap_expressway <- st_read('csv', 'accidents_sgmap_expressway')
View(accidents_sgmap_expressway)
accidents_sgmap_expressway_3414 <- st_transform(accidents_sgmap_expressway, 3414)
accidents_sgmap_expressway_3414
st_write(accidents_sgmap_expressway, "csv/accidents_sgmap_expressway.csv", layer_options = "GEOMETRY=AS_XY")
View(LTATraffic_sgmap_3414)
View(LTATraffic_sgmap_3414)
View(accidents_sgmap_shp)
str(accidents_sgmap_shp)
x <- left_join(accidents_sgmap_expressway, accidents_sgmap_shp, by = c('geometry' = 'geometry'))
st_read('csv', 'accidents_sgmap')
st_read('csv', 'accidents_sgmap')
a <- st_read('csv', 'accidents_sgmap')
View(a)
View(LTATraffic_sgmap_3414)
View(a)
st_join(accidents_sgmap_expressway, accidents_sgmap_shp)
accidents_time <- st_join(accidents_sgmap_expressway, accidents_sgmap_shp)
View(accidents_time)
accidents_final <- accidents_time %>% select(Type, Date, Time, Descriptions, PLN_AREA_C, PLN_AREA_N, REGION_C, REGION_N, RoadType, geometry )
View(accidents_time)
accidents_final <- accidents_time %>% select(Type.x, Date.x, Time.y, Descriptions.x, PLN_AREA_C.x, PLN_AREA_N.x, REGION_C.x, REGION_N.x, RoadType.x, geometry.x )
accidents_final <- accidents_time %>% select(Type.x, Date.x, Time, Descriptions.x, PLN_AREA_C.x, PLN_AREA_N.x, REGION_C.x, REGION_N.x, RoadType.x, geometry.x )
accidents_final <- accidents_time %>% select(Type.x, Date.x, Time, Descriptions, PLN_AREA_C.x, PLN_AREA_N.x, REGION_C.x, REGION_N.x, RoadType.x, geometry.x )
accidents_final <- accidents_time %>% select(Type.x, Date.x, Time, Descriptions, PLN_AREA_C.x, PLN_AREA_N.x, REGION_C.x, REGION_N.x, RoadType, geometry.x )
accidents_final <- accidents_time %>% select(Type.x, Date.x, Time, Descriptions, PLN_AREA_C.x, PLN_AREA_N.x, REGION_C.x, REGION_N.x, RoadType, geometry)
View(accidents_final)
names(accidents_final)
names(accidents_final) <- c('Type', 'Date', 'Time', 'Descriptions', 'PLN_AREA_C', 'PLN_AREA_N', 'REGION_C', 'REGION_N', 'RoadType', 'geometry')
names(accidents_final) <- c('Type', 'Date', 'Time', 'Descriptions', 'PLN_AREA_C', 'PLN_AREA_N', 'REGION_C', 'REGION_N', 'RoadType', 'geometry')
st_write(accidents_final, "csv/accidents_sgmap_expressway.csv", layer_options = "GEOMETRY=AS_XY")
library(lubridate)
install.packages(lubridate)
install.packages('lubridate')
install.packages("lubridate")
?hms
hms('2:22:22')
class(hms('2:22:22'))
packages = c('tmap', 'sf', 'tidyverse', 'RColorBrewer', 'classInt', 'spatstat', 'rgdal', 'maptools')
for (p in packages){
if(!require(p, character.only = T)){
install.packages(p)
}
library(p, character.only = T)
}
data <- read_csv('csv/LTATrafficDataClean2.csv')
dataSF <- st_as_sf(data, coords =c( 'Longitude', 'Latitude') , crs = '+proj=longlat +datum=WGS84 +no_defs')
expressway<- readShapeSpatial('RoadNetwork/roads_expressway')
sgmap <- st_read('data.gov.sg/planningArea', 'MP14_PLNG_AREA_WEB_PL')
dataSF_svy21 <- st_transform(dataSF, 3414)
accidents <- dataSF_svy21 %>% filter(Type == 'Accident')
tm_shape(sgmap) + tm_borders()  + tm_shape(accidents) + tm_symbols(size = 0.5)
st_write(accidents, "csv/accidents.csv", layer_options = "GEOMETRY=AS_XY")
packages = c('tmap', 'sf', 'tidyverse', 'RColorBrewer', 'classInt', 'spatstat', 'rgdal', 'maptools')
for (p in packages){
if(!require(p, character.only = T)){
install.packages(p)
}
library(p, character.only = T)
}
data <- read_csv('csv/LTATrafficDataClean2.csv')
dataSF <- st_as_sf(data, coords =c( 'Longitude', 'Latitude') , crs = '+proj=longlat +datum=WGS84 +no_defs')
expressway<- readShapeSpatial('RoadNetwork/roads_expressway')
sgmap <- st_read('data.gov.sg/planningArea', 'MP14_PLNG_AREA_WEB_PL')
dataSF_svy21 <- st_transform(dataSF, 3414)
accidents <- dataSF_svy21 %>% filter(Type == 'Accident')
tm_shape(sgmap) + tm_borders()  + tm_shape(accidents) + tm_symbols(size = 0.5)
st_write(accidents, "csv/accidents.csv", layer_options = "GEOMETRY=AS_XY")
sgroad <- st_read('RoadNetwork', 'roads_exp_join')
View(sgroad)
sgroad_pln <- st_join(sgroad, sgmap)
sgroad
sgroad <- st_transform(sgroad, 3414)
sgroad
CRS(sgroad)
st_crs(sgroad)
st_crs(sgmap)
sgmap
st_crs(sgroad) <- 3414
st_crs(sgmap) <- 3414
sgmap
sgroad
sgroad_pln <- st_join(sgroad, sgmap)
View(sgroad_pln)
View(sgroad)
glimpse(sgroad_pln)
sgroad_pln_short <- sgroad_pln %>% filter(osm_id, name, ref, type, oneway, bridge, maxspeed, RoadType, PLN_AREA_C, PLN_AREA_N, REGION_C, REGION_N)
sgroad_pln_short <- sgroad_pln %>% filter(osm_id)
sgroad_pln_short <- sgroad_pln %>% select(osm_id, name, ref, type, oneway, bridge, maxspeed, RoadType, PLN_AREA_C, PLN_AREA_N, REGION_C, REGION_N)
View(sgroad_pln_short)
st_write(sgroad_pln_short, 'sgroad_joined.shp')
View(sgroad_pln_short)
View(sgroad_pln)
?strptime
View(sgroad_pln_short)
View(dataSF_svy21)
as.POSIXlt('23:54:00')
?data
data(GR.Hospitals)
packages = c('tidyverse', 'REAT', 'SpatialAcc')
for (p in packages){
if(!require(p, character.only = T)){
install.packages(p)
}
library(p,character.only = T)
}
data(PWC.Municipalities)
data(GR.Hospitals)
head(PWC.Municipalities)
GR.H_Coords <-cbind(GR.Hospitals$X,GR.Hospitals$Y)
GR.M_Coords <-cbind(PWC.Municipalities$pwX,PWC.Municipalities$pwY)
GR.d <- distance(GR.M_Coords, GR.H_Coords) #returns m
GR.d100 <- GR.d / 100000 #to reduce the length of the distance, so that calculation will be faster - to standardise data , otherwise if range too big, not good
GR.acc <- ac(PWC.Municipalities$Pop, GR.Hospitals$Beds15, GR.d100, d0 = 50000, power = 2, family = 'SAM')
GR.acc1 <- data.frame(PWC.Municipalities[,c(1,5,6)],
GR.acc)
library(leaflet)
m= leaflet(GR.acc1) %>% addTiles() %>%
setView(23, 39, zoom = 6) %>%
addCircles(lng= ~Lon, lat= ~Lat, weight= 1,
radius = ~sqrt(GR.acc) * 10,
popup = ~KallCode)
m
GR.HospitalDF <- as.data.frame(GR.Hospitals)
GR.dist <- dist.mat(PWC.Municipalities, "KallCode",
"pwY", "pwX", GR.HospitalDF,
"Name", "Y", "X", unit = "km")
GR.joined <- left_join(GR.dist, GR.HospitalDF,
c("to"="Name"))
GR.hansen <- hansen(GR.joined, "from", "to",
"Beds15", "distance", gamma = 1,
lambda = -2, atype = "pow",
dtype = "pow")
library(sf)
dataSF <- st_as_sf(GR.acc1, coords =c( 'Lon', 'Lat') , crs = '+proj=longlat +datum=WGS84 +no_defs')
tmap_mode("view")
library(REAT)
?data
data("GR.Hospitals")
packages = c('tmap', 'sf', 'tidyverse', 'RColorBrewer', 'classInt', 'spatstat', 'rgdal', 'maptools')
for (p in packages){
if(!require(p, character.only = T)){
install.packages(p)
}
library(p, character.only = T)
}
data <- read_csv('csv/LTATrafficDataClean2.csv')
dataSF <- st_as_sf(data, coords =c( 'Longitude', 'Latitude') , crs = '+proj=longlat +datum=WGS84 +no_defs')
expressway<- readShapeSpatial('RoadNetwork/roads_expressway')
sgmap <- st_read('data.gov.sg/planningArea', 'MP14_PLNG_AREA_WEB_PL')
dataSF_svy21 <- st_transform(dataSF, 3414)
accidents <- dataSF_svy21 %>% filter(Type == 'Accident')
tm_shape(sgmap) + tm_borders()  + tm_shape(accidents) + tm_symbols(size = 0.5)
st_write(accidents, "csv/accidents.csv", layer_options = "GEOMETRY=AS_XY")
accidents_xy <- read.csv('csv/accidents.csv')
accidents_ppp <- ppp(accidents_xy[,1], accidents_xy[,2], c(min(accidents_xy[,1]), max(accidents_xy[,1])), c(min(accidents_xy[,2]), max(accidents_xy[,2])))
plot(accidents_ppp)
summary(accidents_ppp)
plot(Kest(accidents_ppp))
plot(envelope(accidents_ppp,Kest))
plot(density(accidents_ppp))
expressway_psp <- as.psp(expressway)
expressway_linnet <- as.linnet.psp(expressway_psp, sparse = TRUE)
accidents_lpp <- lpp(accidents_ppp, expressway_linnet)
plot(density.lpp(accidents_lpp, 1000))
iplot(density.lpp(accidents_lpp, 1000))
install.packages('rpanel')
library(rpanel)
iplot(density.lpp(accidents_lpp, 1000))
packages = c('rgdal', 'maptools', 'spatstat')
for (p in packages){
if(!require(p, character.only = T)){
install.packages(p)
}
library(p, character.only = T)
}
?c
?readOGR
childcare <- readOGR('Hands-on09', 'CHILDCARE_WL' )
packages = c('rgdal', 'maptools', 'spatstat')
for (p in packages){
if(!require(p, character.only = T)){
install.packages(p)
}
library(p, character.only = T)
}
childcare <- readOGR('Hands-on09', 'CHILDCARE_WL' )
childcare <- readOGR('Hands-on09', 'CHILDCARE_WL' )
woodlands <- readOGR('Hands-on09', 'WOODLANDS' )
View(woodlands)
View(childcare)
View(childcare)
View(childcare)
childcare <- readOGR('Hands-on09', 'CHILDCARE_WL' )
woodlands <- readOGR('Hands-on09', 'WOODLANDS' )
class(childcare)
str(childcare)
packages = c('rgdal', 'maptools', 'spatstat')
for (p in packages){
if(!require(p, character.only = T)){
install.packages(p)
}
library(p, character.only = T)
}
childcare <- readOGR('Hands-on09','CHILDCARE_WL' )
woodlands <- readOGR('Hands-on09', 'WOODLANDS' )
str(childcare)
View(childcare)
View(childcare)
View(childcare)
View(childcare)
View(woodlands)
View(woodlands)
head(childcare)
childcare@data
childcare@data$X_ADDR
childcare@data[c('X_ADDR')]
childcare@data[c('X_ADDR', 'Y_ADDR') ]
qtm(childcare)
plot(childcare)
plot(woodlands)
?as.ppp
?ppp
childcare_ppp <- ppp(childcare@data$X_ADDR, childcare@data$Y_ADDR)
childcare <- readOGR('data','CHILDCARE_WL' )
woodlands <- readOGR('data', 'WOODLANDS' )
View(childcare_ppp)
plot(childcare_ppp)
woodlands_owin <- as.owin(woodlands)
?ppp
childcare_ppp <- ppp(childcare@data$X_ADDR, childcare@data$Y_ADDR, woodlands_owin)
childcare_sp <- as(childcare, 'SpatialPoints')
woodlands_sp <- as(woodlands, 'SpatialPolygon')
childcare_sp <- as(childcare, 'SpatialPoints')
woodlands_sp <- as(woodlands, 'SpatialPolygons')
str(woodlands_sp)
View(childcare_sp)
quadratcount(childcare_ppp)
x <- quadratcount(childcare_ppp)
intensity.quadratcount(x)
plot(intensity.quadratcount(x))
plot(intensity.quadratcount(x, image = TRUE))
quadrat.test(childcare_ppp)
quadrat.test(childcare_ppp,5,4)
quadrat.test(childcare_ppp, 5 ,4 )
qc <- quadratcount(childcare_ppp, 5 , 4 )
qc
plot(qc)
plot(intensity.quadratcount(qc, image = TRUE))
plot(intensity.quadratcount(qc, image = TRUE))
plot(intensity.quadratcount(x, image = TRUE))
plot(x)
plot(qc)
childcare_ppp <- as.ppp(childcare_sp)
w <- as.owin(woodlands_sp)
qc <- quadratcount(childcare_ppp, 5 , 4 )
quadrat.test(childcare_ppp, 5 ,4 )
plot(intensity.quadratcount(qc, image = TRUE))
quadrat.test(childcare_ppp,5,4)
nnd <- nndist(childcare_ppp)
hist(nnd)
clarkevans.test(childcare_ppp)
nnd <- nndist(childcare_ppp)
hist(nnd)
clarkevans.test(childcare_ppp)
g <- Gest(childcare_ppp)
g
plot(g)
G.csr <- envelope(childcare_ppp, Gest, nsim = 99, rank = 1, glocal = TRUE)
plot(G.csr)
G.csr <- envelope(childcare_ppp, Gest, nsim = 999, rank = 1, glocal = TRUE)
plot(G.csr)
G.csr <- envelope(childcare_ppp, Gest, nsim = 99, rank = 1, glocal = TRUE)
plot(G.csr, xlim = c(0,500))
k <- Kest(childcare_ppp)
plot(k, xlim  = c(0,500))
G.csr <- envelope(childcare_ppp, Kest, nsim = 99, rank = 1, glocal = TRUE)
plot(G.csr, xlim = c(0,500))
?envelope
G.csr <- envelope(childcare_ppp, Kest, nsim = 99, rank = 1, glocawl = TRUE)
plot(G.csr, xlim = c(0,500))
G.csr <- envelope(childcare_ppp, Kest, nsim = 99, rank = 1, glocal = TRUE)
plot(G.csr, xlim = c(0,500))
G.csr <- envelope(childcare_ppp, Kest, nsim = 99, rank = 1, glocal = TRUE)
plot(G.csr, xlim = c(0,500))
G.csr <- envelope(childcare_ppp, Kest, nsim = 999, rank = 1, glocal = TRUE)
plot(G.csr, xlim = c(0,500))
G.csr <- envelope(childcare_ppp, Kest, nsim = 999)
plot(G.csr, xlim = c(0,500))
G.csr <- envelope(childcare_ppp, Kest, nsim = 999)
plot(G.csr, xlim = c(0,500))
# nearby cluster, 100 - 250 random,
# why 100? bcos based on the k function? 100m seems to be random , so try 100
plot(kde_sp_100)
kde_sp_100 <- density(childcare_ppp, 100)
# why 100? bcos based on the k function? 100m seems to be random , so try 100
plot(kde_sp_100)
kde_sp_100 <- density(childcare_ppp, 1)
# why 100? bcos based on the k function? 100m seems to be random , so try 100
plot(kde_sp_100)
kde_sp_100 <- density(childcare_ppp, 1000)
# why 100? bcos based on the k function? 100m seems to be random , so try 100
plot(kde_sp_100)
kde_sp_100 <- density(childcare_ppp, 100)
# why 100? bcos based on the k function? 100m seems to be random , so try 100
plot(kde_sp_100)
kde_sp_100 <- density(childcare_ppp, 50)
# why 100? bcos based on the k function? 100m seems to be random , so try 100
plot(kde_sp_100)
kde_sp_100 <- density(childcare_ppp, 100)
# why 100? bcos based on the k function? 100m seems to be random , so try 100
plot(kde_sp_100)
K.csr <- envelope(childcare_ppp, Kest, nsim = 999)
plot(K.csr, xlim = c(0,500))
# nearby cluster, 100 - 250 random, beyond clustered
packages = c('tmap', 'sf', 'tidyverse', 'RColorBrewer', 'classInt', 'spatstat', 'rgdal', 'maptools')
for (p in packages){
if(!require(p, character.only = T)){
install.packages(p)
}
library(p, character.only = T)
}
data <- read_csv('csv/LTATrafficDataClean2.csv')
dataSF <- st_as_sf(data, coords =c( 'Longitude', 'Latitude') , crs = '+proj=longlat +datum=WGS84 +no_defs')
expressway<- readShapeSpatial('RoadNetwork/roads_expressway')
sgmap <- st_read('data.gov.sg/planningArea', 'MP14_PLNG_AREA_WEB_PL')
dataSF_svy21 <- st_transform(dataSF, 3414)
accidents <- dataSF_svy21 %>% filter(Type == 'Accident')
tm_shape(sgmap) + tm_borders()  + tm_shape(accidents) + tm_symbols(size = 0.5)
accidents_xy <- read.csv('csv/accidents.csv')
accidents_ppp <- ppp(accidents_xy[,1], accidents_xy[,2], c(min(accidents_xy[,1]), max(accidents_xy[,1])), c(min(accidents_xy[,2]), max(accidents_xy[,2])))
plot(accidents_ppp)
summary(accidents_ppp)
plot(Kest(accidents_ppp))
plot(envelope(accidents_ppp,Kest))
plot(density(accidents_ppp))
expressway_psp <- as.psp(expressway)
expressway_linnet <- as.linnet.psp(expressway_psp, sparse = TRUE)
accidents_lpp <- lpp(accidents_ppp, expressway_linnet)
plot(density.lpp(accidents_lpp, 1000))
mce_kpe_camera <- st_read('data.gov.sg/mce-kpe-speed-camera-shp', 'MCE_KPE_SPEED_CAMERA')
mce_kpe_camera$Type <- 'MCE_KPE_Camera'
st_write(mce_kpe_camera, "csv/mce_kpe_camera.csv", layer_options = "GEOMETRY=AS_XY")
mce_kpe_camera_xy <- read.csv('csv/mce_kpe_camera.csv')
mce_kpe_camera_join <- select(mce_kpe_camera_xy, X, Y, Type )
accidents_join <- select(accidents_xy, X, Y, Type)
accidents_mce_kpe_cameras <- rbind(accidents_join, mce_kpe_camera_join)
accidents_mce_ppp <- ppp(accidents_mce_kpe_cameras[,1], accidents_mce_kpe_cameras[,2], c(min(accidents_mce_kpe_cameras[,1]), max(accidents_mce_kpe_cameras[,1])), c(min(accidents_mce_kpe_cameras[,2]), max(accidents_mce_kpe_cameras[,2])), marks = accidents_mce_kpe_cameras$Type)
accidents_mce_lpp <- lpp(accidents_mce_ppp, expressway_linnet)
linearKcross(accidents_mce_lpp, 'Accident' , 'MCE_KPE_Camera')
data <- read_csv('csv/LTATrafficDataClean2.csv')
packages = c('tmap', 'sf', 'tidyverse', 'RColorBrewer', 'classInt', 'spatstat', 'rgdal', 'maptools')
for (p in packages){
if(!require(p, character.only = T)){
install.packages(p)
}
library(p, character.only = T)
}
data <- read_csv('csv/LTATrafficDataClean2.csv')
dataSF <- st_as_sf(data, coords =c( 'Longitude', 'Latitude') , crs = '+proj=longlat +datum=WGS84 +no_defs')
expressway<- readShapeSpatial('RoadNetwork/roads_expressway')
sgmap <- st_read('data.gov.sg/planningArea', 'MP14_PLNG_AREA_WEB_PL')
dataSF_svy21 <- st_transform(dataSF, 3414)
accidents <- dataSF_svy21 %>% filter(Type == 'Accident')
View(accidents)
packages = c('tmap', 'sf', 'tidyverse', 'RColorBrewer', 'classInt', 'spatstat', 'rgdal', 'maptools')
for (p in packages){
if(!require(p, character.only = T)){
install.packages(p)
}
library(p, character.only = T)
}
library(readr)
library(sf)
trafficReport <- read_csv("data/LTATrafficDataClean2.csv")
trafficReport_shp <- st_as_sf(trafficReport, coords = c("Longitude", "Latitude"), crs = "+proj=longlat +datum=WGS84 +no_defs")
traffic_Report_svy21 <- st_transform(trafficReport_shp, crs = 3414)
#st_write(traffic_Report_svy21, "data/temp.csv", layer_options = "GEOMETRY=AS_XY") # writes X and Y as columns
library(rgdal)
library(polyCub) #install package polyCub
costaloutline <- readOGR("data/sg_map/CostalOutline.shp")
costaloutline_sp <- as(costaloutline, "SpatialPolygons")
costaloutline_owin <- as.owin.SpatialPolygons(costaloutline_sp)
costaloutline_mask <- as.mask(costaloutline_owin)
library(tidyverse)
library(spatstat)
#temp <- read_csv("data/temp.csv")
accidents <- traffic_Report_svy21 %>% filter(Type == "Accident")
#roadworks <- traffic_Report_svy21 %>% filter(Type == "Roadwork")
heavytraffic <- traffic_Report_svy21 %>% filter(Type == "Heavy Traffic")
# accidents_ppp <- ppp(accidents$X, accidents$Y, costaloutline_owin)
# roadworks_ppp <- ppp(roadworks$X, roadworks$Y, costaloutline_owin)
# heavytraffic_ppp <- ppp(heavytraffic$X, heavytraffic$Y, costaloutline_owin)
# plot(accidents_ppp)
# plot(roadworks_ppp)
# plot(heavytraffic_ppp)
class(accidents)
View(accidents)
View(accidents)
library(tidyverse)
library(spatstat)
#temp <- read_csv("data/temp.csv")
accidents <- traffic_Report_svy21 %>% filter(Type == "Accident")
#roadworks <- traffic_Report_svy21 %>% filter(Type == "Roadwork")
heavytraffic <- traffic_Report_svy21 %>% filter(Type == "Heavy Traffic")
accidents_ppp <- ppp(coordinates(accidents)[,1], coordinates(accidents)[,2], costaloutline_owin)
library(tidyverse)
library(spatstat)
#temp <- read_csv("data/temp.csv")
accidents <- traffic_Report_svy21 %>% filter(Type == "Accident")
accidents_sp <- as(accidents, "SpatialPoints")
library(tidyverse)
library(spatstat)
#temp <- read_csv("data/temp.csv")
accidents <- traffic_Report_svy21 %>% filter(Type == "Accident")
accidents_sp <- as(accidents, "Spatial")
#roadworks <- traffic_Report_svy21 %>% filter(Type == "Roadwork")
heavytraffic <- traffic_Report_svy21 %>% filter(Type == "Heavy Traffic")
accidents_ppp <- ppp(coordinates(accidents_sp)[,1], coordinates(accidents_sp)[,2], costaloutline_owin)
# accidents_ppp <- ppp(accidents$X, accidents$Y, costaloutline_owin)
# roadworks_ppp <- ppp(roadworks$X, roadworks$Y, costaloutline_owin)
# heavytraffic_ppp <- ppp(heavytraffic$X, heavytraffic$Y, costaloutline_owin)
# plot(accidents_ppp)
# plot(roadworks_ppp)
# plot(heavytraffic_ppp)
View(accidents_ppp)
library(tidyverse)
library(spatstat)
#temp <- read_csv("data/temp.csv")
accidents <- traffic_Report_svy21 %>% filter(Type == "Accident")
accidents_sp <- as(accidents, "Spatial")
#roadworks <- traffic_Report_svy21 %>% filter(Type == "Roadwork")
heavytraffic <- traffic_Report_svy21 %>% filter(Type == "Heavy Traffic")
accidents_ppp <- ppp(coordinates(accidents_sp)[,1], coordinates(accidents_sp)[,2], costaloutline_owin)
# accidents_ppp <- ppp(accidents$X, accidents$Y, costaloutline_owin)
# roadworks_ppp <- ppp(roadworks$X, roadworks$Y, costaloutline_owin)
# heavytraffic_ppp <- ppp(heavytraffic$X, heavytraffic$Y, costaloutline_owin)
plot(accidents_ppp)
# plot(roadworks_ppp)
# plot(heavytraffic_ppp)
library(tidyverse)
library(spatstat)
#temp <- read_csv("data/temp.csv")
accidents <- traffic_Report_svy21 %>% filter(Type == "Accident")
accidents_sp <- as(accidents, "Spatial")
#roadworks <- traffic_Report_svy21 %>% filter(Type == "Roadwork")
heavytraffic <- traffic_Report_svy21 %>% filter(Type == "Heavy Traffic")
heavytraffic_sp <- as(heavytraffic, "Spatial")
accidents_ppp <- ppp(coordinates(accidents_sp)[,1], coordinates(accidents_sp)[,2], costaloutline_owin)
heavytraffic_ppp <- ppp(coordinates(heavytraffic_sp)[,1], coordinates(heavytraffic_sp)[,2], costaloutline_owin)
# accidents_ppp <- ppp(accidents$X, accidents$Y, costaloutline_owin)
# roadworks_ppp <- ppp(roadworks$X, roadworks$Y, costaloutline_owin)
# heavytraffic_ppp <- ppp(heavytraffic$X, heavytraffic$Y, costaloutline_owin)
plot(accidents_ppp)
# plot(roadworks_ppp)
plot(heavytraffic_ppp)
library(maptools)
roadNetwork <- readShapeSpatial("data/RoadNetwork/roads_expressway", CRS("+init=epsg:3414"))
roadNetwork_psp <- as.psp(roadNetwork, window=NULL, marks=NULL, check=spatstat.options("checksegments"), fatal=TRUE)
roadNetwork_linnet <- as.linnet.psp(roadNetwork_psp, sparse=TRUE)
plot(roadNetwork_linnet)
accidents_lpp <- lpp(accidents_ppp, roadNetwork_linnet)
heavytraffic_lpp <- lpp(heavytraffic_ppp, roadNetwork_linnet)
plot(accidents_lpp)
plot(heavytraffic_lpp)
library(spatstat)
plot(density.lpp(accidents_lpp, 1000))
plot(density.ppp(accidents_ppp, sigma=bw.ppl))
plot(density.lpp(heavytraffic_lpp, 3000))
plot(density.ppp(heavytraffic_ppp, 1000))
library(spatstat)
accidentskde <- density.lpp(accidents_lpp, sigma=1000)
accidentskde_ppp <- density.ppp(accidents_ppp, sigma=1000)
plot(accidentskde)
library(tmap)
library(tmaptools)
library(maptools)
library(rgdal)
accidentkde_sgdf <- as.SpatialGridDataFrame.im()
library(tmap)
library(tmaptools)
library(maptools)
library(rgdal)
accidentkde_sgdf <- as.SpatialGridDataFrame.im(accidentskde)
accidentkde_ppp_sgdf <- as.SpatialGridDataFrame.im(accidentskde_ppp)
proj4string(accidentkde_sgdf) = CRS("+init=epsg:3414")
proj4string(accidentkde_ppp_sgdf) = CRS("+init=epsg:3414")
tmap_mode("view")
tm_shape(accidentkde_sgdf) +
tm_raster()
shiny::runApp('~/Documents/GitHub/Roadrunner/Shinytest')
runApp('~/Documents/GitHub/Roadrunner/Shinytest')
install.packages("sqldf")
runApp('~/Documents/GitHub/Roadrunner/Shinytest')
