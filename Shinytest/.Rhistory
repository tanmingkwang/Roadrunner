shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
library(readr)
library(sf)
trafficReport <- read_csv("data/LTATrafficDataClean2.csv")
trafficReport_shp <- st_as_sf(trafficReport, coords = c("Longitude", "Latitude"), crs = "+proj=longlat +datum=WGS84 +no_defs")
traffic_Report_svy21 <- st_transform(trafficReport_shp, crs = 3414)
st_write(traffic_Report_svy21, "data/temp.csv", layer_options = "GEOMETRY=AS_XY") # writes X and Y as columns
runApp()
runApp()
runApp()
library(spatstat)
library(rgdal)
library(maptools)
packages = c('maptools', 'spatstate', 'rgdal')
for (p in packages){
if(!require(p, character.only = T)){
install.packages(p)
}
library(p,character.only = T)
}
packages = c('maptools', 'spatstat', 'rgdal')
for (p in packages){
if(!require(p, character.only = T)){
install.packages(p)
}
library(p,character.only = T)
}
library(spatstat)
library(rgdal)
library(maptools)
childcare <- readOGR("Hands-on09/CHILDCARE_WL.shp")
childcare <- readOGR("Hands-on09/CHILDCARE_WL.shp")
woodlands <- readOGR("Hands-on09/WOODLANDS.shp")
View(childcare)
runApp()
childcare_sp <- as(childcare,"SpatialPoints")
woodlands_sp <- as(woodlands, "SpatialPolygons")
childcare_ppp <- as(childcare_sp, "ppp")
W <- as(woodlands_sp, "owin")
plot(childcare_ppp)
plot(W)
qc <- quadratcount(childcare_ppp,5,4)
quadrat.test(childcare_ppp,5,4)
plot(qc)
runApp()
runApp()
runApp()
runApp()
runApp()
nnd <- nndist(childcare_ppp)
hist(nnd)
runApp()
runApp()
runApp()
G <- Gest(childcare_ppp)
plot(G, xlim=c(0,500))
runApp()
runApp()
G.csr <- envelope(childcare_ppp, Gest, nsia = 999, rank
= 1, glocal = TRUE)
plot(G.csr, xlim=c(0,500))
runApp()
runApp()
runApp()
kde_sp_100 <- density(childcare_ppp,100)
kde_sp_100 <- density(childcare_ppp,100)
plot(kde_sp_100)
runApp()
runApp()
runApp()
plot(traffic_Report_svy21)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
install.packages("sqldf")
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
library(tidyverse)
library(spatstat)
temp <- read_csv("data/temp.csv")
accidents <- temp %>% filter(Type == "Accident")
plot (accidents)
runApp()
